{"version":3,"sources":["playground/tiles.ts","playground/render.ts","src/compass/compass.ts","src/compass/index.ts","src/grid/functions/flatTraverse.ts","src/grid/functions/inStore.ts","src/utils/isObject.ts","src/utils/isAxial.ts","src/utils/isFunction.ts","src/utils/isOffset.ts","src/utils/isPoint.ts","src/utils/offsetFromZero.ts","src/utils/index.ts","src/hex/functions/offsetToAxial.ts","src/hex/functions/cloneHex.ts","src/hex/types.ts","src/hex/functions/height.ts","src/hex/functions/hexToPoint.ts","src/hex/functions/isHex.ts","src/hex/functions/width.ts","src/hex/functions/corners.ts","src/hex/functions/createHex.ts","src/hex/functions/equals.ts","src/hex/functions/hexToOffset.ts","src/hex/functions/isFlat.ts","src/hex/functions/isPointy.ts","src/hex/functions/toString.ts","src/hex/functions/createHexPrototype.ts","src/hex/functions/index.ts","src/hex/index.ts","src/grid/functions/neighborOf.ts","src/grid/functions/index.ts","src/grid/grid.ts","src/grid/traversers/at.ts","src/grid/traversers/branch.ts","src/grid/traversers/move.ts","src/grid/traversers/rectangle.ts","src/grid/traversers/index.ts","src/grid/index.ts","src/index.ts","playground/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,MAAM,CAAC,GAAG,QAAV;AAAA,MACL,CAAC,GAAG,QADC;AAAA,MAEL,CAAC,GAAG,UAFC;AAAA,MAGL,CAAC,GAAG,OAHC;AAAA,MAIL,CAAC,GAAG,OAJC;AAAA,MAKL,EAAE,GAAG,cALA;AAAA,MAML,EAAE,GAAG,cANA;AAAA,MAOL,EAAE,GAAG,gBAPA;AAAA,MAQL,EAAE,GAAG,aARA;AAAA,MASL,EAAE,GAAG,gBATA;AAAA,MAUL,EAAE,GAAG,kBAVA;AAAA,MAWL,EAAE,GAAG,eAXA;AAAA,MAYL,EAAE,GAAG,eAZA;;;;;;;;;;;;;;AAcA,MAAM,QAAQ,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,EAA9C,EAAkD,EAAlD,EAAsD,EAAtD,CAAjB;;AACA,MAAM,QAAQ,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,CAAjB;;AACA,MAAM,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,EAAvB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,EAAvC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,CAApD,EAAuD,CAAvD,CAAnB;;AACA,MAAM,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,EAArD,CAAlB;;AACA,MAAM,SAAS,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,EAAlC,EAAsC,CAAtC,EAAyC,CAAzC,EAA4C,CAA5C,EAA+C,CAA/C,EAAkD,EAAlD,EAAsD,EAAtD,CAAlB;;AACA,MAAM,QAAQ,GAAG,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,CAApC,EAAuC,CAAvC,EAA0C,CAA1C,EAA6C,CAA7C,EAAgD,CAAhD,EAAmD,CAAnD,EAAsD,CAAtD,CAAjB;;AAEA,MAAM,KAAK,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,UAArB,EAAiC,SAAjC,EAA4C,SAA5C,EAAuD,QAAvD,CAAd,EAEP;AACA;AACA;;;;;;;;;;;ACxBA;;AAEA;AAEA;AAEA,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAArB;;AACA,IAAI,CAAC,YAAL,EAAmB;AACjB,QAAM,IAAI,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAEM,MAAM,SAAS,GAAI,KAAD,IAA4B;AACnD,EAAA,YAAY,CAAC,SAAb,GAAyB;;;UAGjB,KAAK,CAAC,GAAN,CAAW,GAAD,IAAS,MAAM,CAAC,GAAD,CAAzB,EAAgC,IAAhC,CAAqC,EAArC,CAAwC;;;GAHhD;AAOD,CARM;;;;AAUP,MAAM,WAAW,GAAI,GAAD,IAAwB;AAAA;;AAC1C,MAAI,IAAI,GAAG,MAAX;;AACA,sBAAI,GAAG,CAAC,OAAR,yCAAI,aAAa,QAAb,CAAsB,QAAtB,CAAJ,EAA8B;AAC5B,IAAA,IAAI,GAAG,SAAP;AACD,GAFD,MAEO,qBAAI,GAAG,CAAC,OAAR,0CAAI,cAAa,QAAb,CAAsB,QAAtB,CAAJ,EAA8B;AACnC,IAAA,IAAI,GAAG,SAAP;AACD,GAFM,MAEA,qBAAI,GAAG,CAAC,OAAR,0CAAI,cAAa,QAAb,CAAsB,QAAtB,CAAJ,EAA8B;AACnC,IAAA,IAAI,GAAG,SAAP;AACD,GAFM,MAEA,qBAAI,GAAG,CAAC,OAAR,0CAAI,cAAa,QAAb,CAAsB,QAAtB,CAAJ,EAA8B;AACnC,IAAA,IAAI,GAAG,MAAP;AACD,GAFM,MAEA,qBAAI,GAAG,CAAC,OAAR,0CAAI,cAAa,QAAb,CAAsB,QAAtB,CAAJ,EAA8B;AACnC,IAAA,IAAI,GAAG,QAAP;AACD,GAZyC,CAa1C;AACA;;;AACA,SAAO;uBACc,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAgB,CAAC;AAAE,IAAA,CAAF;AAAK,IAAA;AAAL,GAAD,KAAc,GAAG,CAAC,IAAI,CAAC,EAAvC,EAA2C,IAA3C,CAAgD,GAAhD,CAAoD,WAAW,IAAI;GADxF;AAGD,CAlBD;;AAsBA,MAAM,eAAe,GAAG,CAAxB;AACA,MAAM,EAAE,GAAG,CAAC,CAAC,IAAF,EAAQ,CAAC,CAAT,EAAY,CAAC,IAAb,EAAmB,IAAnB,EAAyB,CAAzB,EAA4B,IAA5B,CAAX;AACA,MAAM,EAAE,GAAG,CAAC,IAAD,EAAO,CAAP,EAAU,CAAC,IAAX,EAAiB,CAAC,IAAlB,EAAwB,CAAxB,EAA2B,IAA3B,CAAX;;AACA,MAAM,kBAAkB,GAAI,GAAD,IAAwB;AAAA;;AACjD,MAAI,mBAAC,GAAG,CAAC,OAAL,0CAAC,cAAa,QAAb,CAAsB,OAAtB,CAAD,KAAmC,mBAAC,GAAG,CAAC,OAAL,0CAAC,cAAa,QAAb,CAAsB,SAAtB,CAAD,CAAvC,EAA0E;AACxE;AACD;;AAED,QAAM,MAAM,GAAQ;AAAE,IAAA,KAAK,EAAE;AAAT,GAApB;;AACA,uBAAI,GAAG,CAAC,OAAR,0CAAI,cAAa,QAAb,CAAsB,OAAtB,CAAJ,EAAoC;AAClC,IAAA,MAAM,CAAC,KAAP,GAAe,MAAf;AACA,IAAA,MAAM,CAAC,SAAP,GAAmB,CAAnB;AACD,GAHD,MAGO,qBAAI,GAAG,CAAC,OAAR,0CAAI,cAAa,QAAb,CAAsB,SAAtB,CAAJ,EAAsC;AAC3C,IAAA,MAAM,CAAC,KAAP,GAAe,MAAf;AACD,GAXgD,CAajD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAO;uBACc,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAgB,CAAC;AAAE,IAAA,CAAF;AAAK,IAAA;AAAL,GAAD,EAAW,CAAX,KAAgB;AACjD,IAAA,CAAC,IAAI,eAAe,GAAG,EAAE,CAAC,CAAD,CAAzB;AACA,IAAA,CAAC,IAAI,eAAe,GAAG,EAAE,CAAC,CAAD,CAAzB;AACA,WAAO,GAAG,CAAC,IAAI,CAAC,EAAhB;AACD,GAJkB,CAIjB,4CAA4C,MAAM,CAAC,KAAK;GAL5D;AAOD,CAhCD;;AAkCA,MAAM,cAAc,GAAI,GAAD,IAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO;uBACc,GAAG,CAAC,KAAJ,GAAY,IAAI,gFACnC,GAAG,CAAC,CACN,IAAI,GAAG,CAAC,CAAC;4BACiB,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;;GAJxC;AAOD,CAnBD;;AAqBO,MAAM,MAAM,GAAI,GAAD,IAAgC;AACpD,MAAI,MAAM,GAAG,EAAb;AACA,EAAA,MAAM,IAAI,WAAW,CAAC,GAAD,CAArB;AACA,EAAA,MAAM,IAAI,kBAAkB,CAAC,GAAD,CAA5B;AACA,EAAA,MAAM,IAAI,cAAc,CAAC,GAAD,CAAxB;AACA,SAAO,MAAP;AACD,CANM;;;;;;;;;;ACtGP,IAAY,wBAAZ;;;AAAA,CAAA,UAAY,wBAAZ,EAAoC;AAClC,EAAA,wBAAA,CAAA,wBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,wBAAA,CAAA,wBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,wBAAA,CAAA,wBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,wBAAA,CAAA,wBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACD,CALD,EAAY,wBAAwB,wCAAxB,wBAAwB,GAAA,EAAA,CAApC;;AAOA,IAAY,uBAAZ;;;AAAA,CAAA,UAAY,uBAAZ,EAAmC;AACjC,EAAA,uBAAA,CAAA,uBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,uBAAA,CAAA,uBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,uBAAA,CAAA,uBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,uBAAA,CAAA,uBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACD,CALD,EAAY,uBAAuB,uCAAvB,uBAAuB,GAAA,EAAA,CAAnC;;AAOA,IAAY,gBAAZ;;;AAAA,CAAA,UAAY,gBAAZ,EAA4B;AAC1B,EAAA,gBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,GAAA,GAAA;AACA,EAAA,gBAAA,CAAA,gBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,GAAA,IAAA;AACD,CATD,EAAY,gBAAgB,gCAAhB,gBAAgB,GAAA,EAAA,CAA5B;;AAaM,MAAO,OAAP,CAAc;AA8BlB,EAAA,WAAA,CAAY,SAAA,GAAkC,gBAAgB,CAAC,CAA/D,EAAgE;AAC9D,SAAK,SAAL,GAAiB,OAAO,SAAP,KAAqB,QAArB,GAAgC,SAAhC,GAA4C,gBAAgB,CAAC,SAAD,CAA7E;AACD;;AApBQ,SAAF,EAAE,CAAC,SAAA,GAAkC,gBAAgB,CAAC,CAApD,EAAqD;AAC5D,WAAO,IAAI,OAAJ,CAAY,SAAZ,CAAP;AACD;;AAEgB,SAAV,UAAU,CAAC,SAAD,EAA4B;AAC3C,WAAO,CAAC,CAAC,wBAAwB,CAAC,SAAD,CAAjC;AACD;;AAEe,SAAT,SAAS,CAAC,SAAD,EAA4B;AAC1C,WAAO,CAAC,CAAC,uBAAuB,CAAC,SAAD,CAAhC;AACD;;AAEY,SAAN,MAAM,CAAC,SAAD,EAAoB,KAApB,EAAiC;AAC5C,WAAO,YAAY,CAAC,SAAS,GAAG,KAAb,EAAoB,CAApB,CAAnB;AACD;;AAQD,EAAA,UAAU,GAAA;AACR,WAAO,OAAO,CAAC,UAAR,CAAmB,KAAK,SAAxB,CAAP;AACD;;AAED,EAAA,SAAS,GAAA;AACP,WAAO,OAAO,CAAC,SAAR,CAAkB,KAAK,SAAvB,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAc;AAClB,WAAO,OAAO,CAAC,MAAR,CAAe,KAAK,SAApB,EAA+B,KAA/B,CAAP;AACD;;AA5CiB;;;AACX,OAAA,CAAA,CAAA,GAAI,gBAAgB,CAAC,CAArB;AACA,OAAA,CAAA,EAAA,GAAK,gBAAgB,CAAC,EAAtB;AACA,OAAA,CAAA,CAAA,GAAI,gBAAgB,CAAC,CAArB;AACA,OAAA,CAAA,EAAA,GAAK,gBAAgB,CAAC,EAAtB;AACA,OAAA,CAAA,CAAA,GAAI,gBAAgB,CAAC,CAArB;AACA,OAAA,CAAA,EAAA,GAAK,gBAAgB,CAAC,EAAtB;AACA,OAAA,CAAA,CAAA,GAAI,gBAAgB,CAAC,CAArB;AACA,OAAA,CAAA,EAAA,GAAK,gBAAgB,CAAC,EAAtB,EAuCT;;AACA,SAAS,YAAT,CAAsB,QAAtB,EAAwC,OAAxC,EAAuD;AACrD,SAAO,CAAE,QAAQ,GAAG,OAAZ,GAAuB,OAAxB,IAAmC,OAA1C;AACD;;;;;;;;AC7ED;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;ACGA;AACO,MAAM,YAAY,GAAmB,UAAhB,IAA8D,CACxF,MADwF,EAExF,MAFwF,KAGtF;AACF,MAAI,CAAC,KAAK,CAAC,OAAN,CAAc,UAAd,CAAL,EAAgC;AAC9B,WAAO,KAAK,CAAC,IAAN,CAAW,UAAU,CAAC,MAAD,EAAS,MAAT,CAArB,CAAP;AACD;;AAED,QAAM,SAAS,GAAQ,EAAvB;;AACA,OAAK,MAAM,SAAX,IAAwB,UAAxB,EAAoC;AAClC,SAAK,MAAM,UAAX,IAAyB,SAAS,CAAC,MAAD,EAAS,MAAT,CAAlC,EAAoD;AAClD,MAAA,MAAM,GAAG,UAAT;AACA,MAAA,SAAS,CAAC,IAAV,CAAe,MAAf;AACD;AACF;;AACD,SAAO,SAAP;AACD,CAhBM;;;;;;;;;;;ACDA,MAAM,OAAO,GAAG,CAAgB,GAAhB,EAAwB,IAAxB,KAA0C,IAAI,CAAC,KAAL,CAAW,GAAX,CAAe,GAAG,CAAC,QAAJ,EAAf,CAA1D;;;;;;;;;;;ACHP;;;AAGO,MAAM,QAAQ,GAAiC,KAA9B,IACtB,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,KAAK,IADlC;;;;;;;;;;;ACFP;;AAEO,MAAM,OAAO,GAAI,KAAD,IACrB,wBAA2B,KAA3B,KAAqC,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,CAAtB,CAArC,IAAiE,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,CAAtB,CAD5D;;;;;;;;;;;ACCA,MAAM,UAAU,GAAyB,KAAtB,IAAqD,OAAO,KAAP,KAAiB,UAAzF;;;;;;;;;;;ACHP;;AAEO,MAAM,QAAQ,GAAI,KAAD,IACtB,wBAA4B,KAA5B,KAAsC,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,GAAtB,CAAtC,IAAoE,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,GAAtB,CAD/D;;;;;;;;;;;ACFP;;AAEO,MAAM,OAAO,GAAI,KAAD,IACrB,wBAAgB,KAAhB,KAA0B,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,CAAtB,CAA1B,IAAsD,MAAM,CAAC,QAAP,CAAgB,KAAK,CAAC,CAAtB,CADjD;;;;;;;;;;;ACHP;AACA;AACO,MAAM,cAAc,GAAG,CAAC,MAAD,EAAiB,QAAjB,KAAuC,QAAQ,GAAG,MAAM,IAAI,QAAQ,GAAG,CAAf,CAAlB,IAAwC,CAArG;;;;;;;;;;ACFP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;ACLA;;AAGO,MAAM,mBAAmB,GAAG,CAAC,GAAD,EAAc,GAAd,EAA2B,MAA3B,MAAiE;AAClG,EAAA,CAAC,EAAE,GAAG,GAAG,2BAAe,MAAf,EAAuB,GAAvB,CADyF;AAElG,EAAA,CAAC,EAAE;AAF+F,CAAjE,CAA5B;;;;AAKA,MAAM,iBAAiB,GAAG,CAAC,GAAD,EAAc,GAAd,EAA2B,MAA3B,MAAiE;AAChG,EAAA,CAAC,EAAE,GAD6F;AAEhG,EAAA,CAAC,EAAE,GAAG,GAAG,2BAAe,MAAf,EAAuB,GAAvB;AAFuF,CAAjE,CAA1B;;;;AAKA,MAAM,aAAa,GAAG,CAC3B;AAAE,EAAA,GAAF;AAAO,EAAA;AAAP,CAD2B,EAE3B;AAAE,EAAA,MAAF;AAAU,EAAA;AAAV,CAF2B,KAGvB,QAAQ,GAAG,mBAAmB,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,CAAtB,GAA2C,iBAAiB,CAAC,GAAD,EAAM,GAAN,EAAW,MAAX,CAHnE;;;;;;;;;;;ACbP;;AAEA;;AAEO,MAAM,QAAQ,GAAG,CAAgB,GAAhB,EAAwB,QAAA,GAAwC,EAAhE,KAAyE;AAC/F,MAAI,qBAAS,QAAT,CAAJ,EAAwB;AACtB,UAAM;AAAE,MAAA,GAAF;AAAO,MAAA,GAAP;AAAY,SAAG;AAAf,QAA8B,QAApC;AACA,UAAM,WAAW,GAAG,kCAAc;AAAE,MAAA,GAAF;AAAO,MAAA;AAAP,KAAd,EAA4B,GAA5B,CAApB;AACA,WAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,cAAP,CAAsB,GAAtB,CAAd,CAAd,EAAyD,GAAzD,EAA8D,WAA9D,EAA2E,UAA3E,CAAP;AACD;;AAED,SAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,cAAP,CAAsB,GAAtB,CAAd,CAAd,EAAyD,GAAzD,EAA8D,QAA9D,CAAP;AACD,CARM;;;;;;;;;;ACJP;AACA;AAOO,MAAM,YAAY,GAAG;AAC1B,EAAA,IAAI,EAAE,MADoB;AAE1B,EAAA,MAAM,EAAE;AAFkB,CAArB;;;;;;;;;;ACRP;;AAEO,MAAM,YAAY,GAAI,OAAD,IAAqB,OAAO,GAAG,CAApD;;;;AAEA,MAAM,UAAU,GAAI,OAAD,IAAqB,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAlD;;;;AAEA,MAAM,MAAM,GAAG,CAAC;AAAE,EAAA,WAAF;AAAe,EAAA,UAAU,EAAE;AAAE,IAAA;AAAF;AAA3B,CAAD,KACpB,WAAW,KAAK,oBAAa,MAA7B,GAAsC,YAAY,CAAC,OAAD,CAAlD,GAA8D,UAAU,CAAC,OAAD,CADnE;;;;;;;;;;;ACNP;;AAEO,MAAM,UAAU,GAAG,CAAC;AAAE,EAAA,WAAF;AAAe,EAAA,UAAU,EAAE;AAAE,IAAA,OAAF;AAAW,IAAA;AAAX,GAA3B;AAAiD,EAAA,MAAM,EAAE;AAAE,IAAA,CAAF;AAAK,IAAA;AAAL,GAAzD;AAAmE,EAAA,CAAnE;AAAsE,EAAA;AAAtE,CAAD,KACxB,WAAW,KAAK,oBAAa,MAA7B,GACI;AACE,EAAA,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAV,IAA0B,CAAC,GAAG,CAAC,GAAG,CAAlC,IAAuC,CAD5C;AAEE,EAAA,CAAC,EAAI,OAAO,GAAG,CAAX,GAAgB,CAAjB,GAAsB,CAAtB,GAA0B;AAF/B,CADJ,GAKI;AACE,EAAA,CAAC,EAAI,OAAO,GAAG,CAAX,GAAgB,CAAjB,GAAsB,CAAtB,GAA0B,CAD/B;AAEE,EAAA,CAAC,EAAE,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAV,IAA0B,CAAC,GAAG,CAAC,GAAG,CAAlC,IAAuC;AAF5C,CANC;;;;;;;;;;;ACFP;;AAGO,MAAM,KAAK,GAAI,KAAD,IACnB,qBAAc,KAAd,KAAwB,CAAC,CAAC,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA6B,gBADlD;;;;;;;;;;;ACHP;;AAEO,MAAM,WAAW,GAAI,OAAD,IAAqB,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAnD;;;;AAEA,MAAM,SAAS,GAAI,OAAD,IAAqB,OAAO,GAAG,CAAjD;;;;AAEA,MAAM,KAAK,GAAG,CAAC;AAAE,EAAA,WAAF;AAAe,EAAA,UAAU,EAAE;AAAE,IAAA;AAAF;AAA3B,CAAD,KACnB,WAAW,KAAK,oBAAa,MAA7B,GAAsC,WAAW,CAAC,OAAD,CAAjD,GAA6D,SAAS,CAAC,OAAD,CADjE;;;;;;;;;;;;ACNP;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAM,aAAa,GAAG,CAAC,KAAD,EAAgB,MAAhB,EAAgC;AAAE,EAAA,CAAF;AAAK,EAAA;AAAL,CAAhC,KAAoD,CAC/E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,GAAjB;AAAsB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAtC,CAD+E,EAE/E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,GAAjB;AAAsB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAtC,CAF+E,EAG/E;AAAE,EAAA,CAAF;AAAK,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAArB,CAH+E,EAI/E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,GAAjB;AAAsB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAtC,CAJ+E,EAK/E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,GAAjB;AAAsB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAtC,CAL+E,EAM/E;AAAE,EAAA,CAAF;AAAK,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAArB,CAN+E,CAA1E;;;;AASA,MAAM,WAAW,GAAG,CAAC,KAAD,EAAgB,MAAhB,EAAgC;AAAE,EAAA,CAAF;AAAK,EAAA;AAAL,CAAhC,KAAoD,CAC7E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,IAAjB;AAAuB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAvC,CAD6E,EAE7E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,GAAjB;AAAsB,EAAA;AAAtB,CAF6E,EAG7E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,IAAjB;AAAuB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAvC,CAH6E,EAI7E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,IAAjB;AAAuB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAvC,CAJ6E,EAK7E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,GAAjB;AAAsB,EAAA;AAAtB,CAL6E,EAM7E;AAAE,EAAA,CAAC,EAAE,CAAC,GAAG,KAAK,GAAG,IAAjB;AAAuB,EAAA,CAAC,EAAE,CAAC,GAAG,MAAM,GAAG;AAAvC,CAN6E,CAAxE;;;;AAaD,SAAU,OAAV,CAAkB,gBAAlB,EAA+D;AACnE,QAAM;AACJ,IAAA,WADI;AAEJ,IAAA,UAAU,EAAE;AAAE,MAAA,OAAF;AAAW,MAAA;AAAX;AAFR,MAGF,gBAHJ;AAIA,QAAM,KAAK,GAAG,kBAAM,gBAAN,IAA0B,4BAAW,gBAAX,CAA1B,GAAyD,gBAAgB,CAAC,MAAxF;AACA,SAAO,WAAW,KAAK,oBAAa,MAA7B,GACH,aAAa,CAAC,wBAAY,OAAZ,CAAD,EAAuB,0BAAa,OAAb,CAAvB,EAA8C,KAA9C,CADV,GAEH,WAAW,CAAC,sBAAU,OAAV,CAAD,EAAqB,wBAAW,OAAX,CAArB,EAA0C,KAA1C,CAFf;AAGD;;;;;;;;;ACrCD;;AAEA;;AACA;;AAEO,MAAM,SAAS,GAAG,CAAgB,cAAhB,EAAmC,KAAA,GAAqC;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAAxE,KAA6F;AACpH,MAAI,kBAAM,cAAN,CAAJ,EAA2B;AACzB,WAAO,cAAc,CAAC,KAAf,CAAqB,KAArB,CAAP;AACD;;AAED,MAAI,qBAAS,KAAT,CAAJ,EAAqB;AACnB,UAAM;AAAE,MAAA,GAAF;AAAO,MAAA,GAAP;AAAY,SAAG;AAAf,QAA8B,KAApC;AACA,UAAM,WAAW,GAAG,kCAAc;AAAE,MAAA,GAAF;AAAO,MAAA;AAAP,KAAd,EAA4B,cAA5B,CAApB;AACA,WAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,MAAP,CAAc,cAAd,CAAd,EAA6C,WAA7C,EAA0D,UAA1D,CAAP;AACD;;AAED,SAAO,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,MAAP,CAAc,cAAd,CAAd,EAA6C,KAA7C,CAAP;AACD,CAZM;;;;;;;;;;;ACLP;;AAGO,MAAM,MAAM,GAAG,CAAC,CAAD,EAAoB,CAApB,KACpB;AACA;AACA,oBAAQ,CAAR,IAAa,WAAW,CAAC,CAAD,EAAwB,CAAxB,CAAxB,GAAqD,YAAY,CAAC,CAAD,EAAyB,CAAzB,CAH5D;;;;AAKP,SAAS,WAAT,CAAqB,CAArB,EAA0C,CAA1C,EAA6D;AAC3D,SAAO,CAAC,CAAC,CAAF,KAAQ,CAAC,CAAC,CAAV,IAAe,CAAC,CAAC,CAAF,KAAQ,CAAC,CAAC,CAAhC;AACD;;AAED,SAAS,YAAT,CAAsB,CAAtB,EAA4C,CAA5C,EAAgE;AAC9D,SAAO,CAAC,CAAC,GAAF,KAAU,CAAC,CAAC,GAAZ,IAAmB,CAAC,CAAC,GAAF,KAAU,CAAC,CAAC,GAAtC;AACD;;;;;;;;;ACdD;;AAGO,MAAM,iBAAiB,GAAG,CAAC,CAAD,EAAY,CAAZ,EAAuB,MAAvB,MAA8D;AAC7F,EAAA,GAAG,EAAE,CAAC,GAAG,2BAAe,MAAf,EAAuB,CAAvB,CADoF;AAE7F,EAAA,GAAG,EAAE;AAFwF,CAA9D,CAA1B;;;;AAKA,MAAM,eAAe,GAAG,CAAC,CAAD,EAAY,CAAZ,EAAuB,MAAvB,MAA8D;AAC3F,EAAA,GAAG,EAAE,CADsF;AAE3F,EAAA,GAAG,EAAE,CAAC,GAAG,2BAAe,MAAf,EAAuB,CAAvB;AAFkF,CAA9D,CAAxB;;;;AAKA,MAAM,WAAW,GAAG,CAAC;AAAE,EAAA,CAAF;AAAK,EAAA,CAAL;AAAQ,EAAA,MAAR;AAAgB,EAAA;AAAhB,CAAD,KACzB,QAAQ,GAAG,iBAAiB,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,CAApB,GAAqC,eAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,MAAP,CADvD;;;;;;;;;;;ACbP;;AAEO,MAAM,MAAM,GAAG,CAAC;AAAE,EAAA;AAAF,CAAD,KAAkC,WAAW,KAAK,oBAAa,IAA9E;;;;;;;;;;;ACFP;;AAEO,MAAM,QAAQ,GAAG,CAAC;AAAE,EAAA;AAAF,CAAD,KAAkC,WAAW,KAAK,oBAAa,MAAhF;;;;;;;;;;;ACAA,MAAM,QAAQ,GAAG,CAAC;AAAE,EAAA,CAAF;AAAK,EAAA;AAAL,CAAD,KAAgC,GAAG,CAAC,IAAI,CAAC,EAA1D;;;;;;;;;;;ACFP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEO,MAAM,kBAAkB,GAAgB;AAC7C,EAAA,UAAU,EAAE;AAAE,IAAA,OAAO,EAAE,CAAX;AAAc,IAAA,OAAO,EAAE;AAAvB,GADiC;AAE7C,EAAA,WAAW,EAAE,oBAAa,MAFmB;AAG7C,EAAA,MAAM,EAAE;AAAE,IAAA,CAAC,EAAE,CAAL;AAAQ,IAAA,CAAC,EAAE;AAAX,GAHqC;AAI7C,EAAA,MAAM,EAAE,CAAC;AAJoC,CAAxC;;;AAOA,MAAM,kBAAkB,GAAmB,OAAhB,IAAiE;AACjG;AACA,QAAM,CAAC,GAAG,IAAI,OAAJ,EAAV;AAEA,QAAM,SAAS,GAAG,EAChB,GAAG,kBADa;;AAEhB,IAAA,KAAK,CAAC,QAAD,EAAS;AACZ,aAAO,wBAAS,IAAT,EAAe,QAAf,CAAP;AACD,KAJe;;AAKhB,IAAA,MAAM,CAAC,WAAD,EAAY;AAChB,aAAO,oBAAO,IAAP,EAAa,WAAb,CAAP;AACD,KAPe;;AAQhB,IAAA,QAAQ,GAAA;AACN,aAAO,wBAAS,IAAT,CAAP;AACD,KAVe;;AAWhB;AACA,OAAG;AAZa,GAAlB,CAJiG,CAmBjG;AACA;;AACA,EAAA,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC;AACjC,KAAC,MAAM,CAAC,WAAR,GAAsB;AAAE,MAAA,KAAK,EAAE;AAAT,KADW;AAEjC,IAAA,gBAAgB,EAAE;AAAE,MAAA,KAAK,EAAE,IAAT;AAAe,MAAA,QAAQ,EAAE;AAAzB,KAFe;AAGjC;AACA;AACA,IAAA,GAAG,EAAE;AACH,MAAA,GAAG,GAAA;AACD,eAAO,8BAAY,IAAZ,EAAkB,GAAzB;AACD;;AAHE,KAL4B;AAUjC,IAAA,OAAO,EAAE;AACP,MAAA,GAAG,GAAA;AACD,eAAO,sBAAQ,IAAR,CAAP;AACD;;AAHM,KAVwB;AAejC,IAAA,UAAU,EAAE;AAAE,MAAA,KAAK,EAAE,mBAAmB,CAAC,SAAD;AAA5B,KAfqB;AAgBjC,IAAA,MAAM,EAAE;AACN,MAAA,GAAG,GAAA;AACD,eAAO,oBAAO,IAAP,CAAP;AACD;;AAHK,KAhByB;AAqBjC,IAAA,MAAM,EAAE;AACN,MAAA,GAAG,GAAA;AACD,eAAO,oBAAO,IAAP,CAAP;AACD;;AAHK,KArByB;AA0BjC,IAAA,QAAQ,EAAE;AACR,MAAA,GAAG,GAAA;AACD,eAAO,wBAAS,IAAT,CAAP;AACD;;AAHO,KA1BuB;AA+BjC,IAAA,WAAW,EAAE;AAAE,MAAA,KAAK,EAAE,oBAAoB,CAAC,SAAD;AAA7B,KA/BoB;AAgCjC,IAAA,MAAM,EAAE;AAAE,MAAA,KAAK,EAAE,YAAY,CAAC,SAAD;AAArB,KAhCyB;AAiCjC,IAAA,GAAG,EAAE;AACH,MAAA,GAAG,GAAA;AACD,eAAO,8BAAY,IAAZ,EAAkB,GAAzB;AACD;;AAHE,KAjC4B;AAsCjC,IAAA,CAAC,EAAE;AACD,MAAA,GAAG,GAAA;AACD,eAAO,MAAM,CAAC,QAAP,CAAgB,CAAC,CAAC,GAAF,CAAM,IAAN,CAAhB,IAA+B,CAAC,CAAC,GAAF,CAAM,IAAN,CAA/B,GAA6C,CAAC,KAAK,CAAN,GAAU,KAAK,CAAnE;AACD,OAHA;;AAID,MAAA,GAAG,CAAC,EAAD,EAAW;AACZ,QAAA,CAAC,CAAC,GAAF,CAAM,IAAN,EAAY,EAAZ;AACD;;AANA,KAtC8B;AA8CjC,IAAA,KAAK,EAAE;AACL,MAAA,GAAG,GAAA;AACD,eAAO,kBAAM,IAAN,CAAP;AACD;;AAHI,KA9C0B;AAmDjC,IAAA,CAAC,EAAE;AACD,MAAA,GAAG,GAAA;AACD,eAAO,4BAAW,IAAX,EAAiB,CAAxB;AACD;;AAHA,KAnD8B;AAwDjC,IAAA,CAAC,EAAE;AACD,MAAA,GAAG,GAAA;AACD,eAAO,4BAAW,IAAX,EAAiB,CAAxB;AACD;;AAHA;AAxD8B,GAAnC;AA+DA,SAAO,MAAM,CAAC,gBAAP,CAAwB,SAAxB,EAAmC;AACxC,IAAA,MAAM,EAAE;AAAE,MAAA,KAAK,EAAE,eAAe,CAAI,SAAJ;AAAxB;AADgC,GAAnC,CAAP;AAGD,CAvFM;;;;AAoGP,SAAS,mBAAT,CAA6B,SAA7B,EAA2D;AACzD,QAAM;AAAE,IAAA;AAAF,MAAiB,SAAvB;;AAEA,MAAI,qBAAS,UAAT,CAAJ,EAA0B;AACxB,QAAK,UAAsB,CAAC,OAAvB,GAAiC,CAAjC,IAAuC,UAAsB,CAAC,OAAvB,GAAiC,CAA7E,EAAgF;AAC9E,aAAO,EAAE,GAAI;AAAN,OAAP;AACD;;AAED,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA;AAAT,QAAoB,UAA1B;;AACA,QAAI,KAAK,GAAG,CAAR,IAAa,MAAM,GAAG,CAA1B,EAA6B;AAC3B,aAAO,oBAAoB,CAAC,SAAD,CAApB,KAAoC,oBAAa,MAAjD,GACH;AAAE,QAAA,OAAO,EAAE,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAnB;AAAiC,QAAA,OAAO,EAAE,MAAM,GAAG;AAAnD,OADG,GAEH;AAAE,QAAA,OAAO,EAAE,KAAK,GAAG,CAAnB;AAAsB,QAAA,OAAO,EAAE,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV;AAAxC,OAFJ;AAGD;AACF;;AAED,MAAI,UAAU,GAAG,CAAjB,EAAoB;AAClB,WAAO;AAAE,MAAA,OAAO,EAAE,UAAX;AAAuB,MAAA,OAAO,EAAE;AAAhC,KAAP;AACD;;AAED,QAAM,IAAI,SAAJ,CACJ,uBAAuB,UAAU,mJAD7B,CAAN;AAGD;;AAED,SAAS,oBAAT,CAA8B;AAAE,EAAA;AAAF,CAA9B,EAAkE;AAChE,EAAA,WAAW,GAAG,WAAd;;AAEA,MAAI,WAAW,KAAK,oBAAa,MAA7B,IAAuC,WAAW,KAAK,oBAAa,IAAxE,EAA8E;AAC5E,WAAO,WAAP;AACD;;AAED,QAAM,IAAI,SAAJ,CAAc,wBAAwB,WAAW,kDAAjD,CAAN;AACD;;AAED,SAAS,YAAT,CAAsB;AAAE,EAAA;AAAF,CAAtB,EAAqD;AACnD,MAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,MAAhB,CAAL,EAA8B;AAC5B,UAAM,IAAI,SAAJ,CAAc,mBAAmB,MAAM,4BAAvC,CAAN;AACD;;AAED,SAAO,MAAP;AACD,EAED;;;AACA,SAAS,eAAT,CACE,SADF,EACoE;AAElE,QAAM;AAAE,IAAA;AAAF,MAAa,SAAnB;;AAEA,MAAI,oBAAQ,MAAR,CAAJ,EAAqB;AACnB,WAAO,EAAE,GAAG;AAAL,KAAP;AACD;;AAED,MAAI,MAAM,KAAK,SAAf,EAA0B;AACxB,WAAO;AAAE,MAAA,CAAC,EAAE,SAAS,CAAC,KAAV,GAAkB,CAAC,GAAxB;AAA6B,MAAA,CAAC,EAAE,SAAS,CAAC,MAAV,GAAmB,CAAC;AAApD,KAAP;AACD;;AAED,MAAI,uBAAqB,MAArB,CAAJ,EAAkC;AAChC,WAAO,MAAM,CAAC,SAAD,CAAb;AACD;;AAED,QAAM,IAAI,SAAJ,CACJ,mBAAmB,MAAM,iHADrB,CAAN;AAGD;;;;;;;;ACxbA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;ACDA;;AACA;;AAEA,MAAM,iBAAiB,GAAG,CACxB,IADwB,EAExB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE,CAAC;AAAZ,CAFwB,EAGxB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAHwB,EAIxB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAJwB,EAKxB,IALwB,EAMxB;AAAE,EAAA,CAAC,EAAE,CAAC,CAAN;AAAS,EAAA,CAAC,EAAE;AAAZ,CANwB,EAOxB;AAAE,EAAA,CAAC,EAAE,CAAC,CAAN;AAAS,EAAA,CAAC,EAAE;AAAZ,CAPwB,EAQxB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE,CAAC;AAAZ,CARwB,CAQP;AARO,CAA1B;AAUA,MAAM,eAAe,GAAG,CACtB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE,CAAC;AAAZ,CADsB,EAEtB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE,CAAC;AAAZ,CAFsB,EAGtB,IAHsB,EAItB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CAJsB,EAKtB;AAAE,EAAA,CAAC,EAAE,CAAL;AAAQ,EAAA,CAAC,EAAE;AAAX,CALsB,EAMtB;AAAE,EAAA,CAAC,EAAE,CAAC,CAAN;AAAS,EAAA,CAAC,EAAE;AAAZ,CANsB,EAOtB,IAPsB,EAQtB;AAAE,EAAA,CAAC,EAAE,CAAC,CAAN;AAAS,EAAA,CAAC,EAAE;AAAZ,CARsB,CAQL;AARK,CAAxB;;AAWO,MAAM,gBAAgB,GAAG,CAAgB;AAAE,EAAA,MAAF;AAAU,EAAA,CAAV;AAAa,EAAA,CAAb;AAAgB,EAAA,GAAhB;AAAqB,EAAA;AAArB,CAAhB,EAA+C,SAA/C,KAA8E;AAC5G,MAAI,SAAS,KAAK,0BAAiB,CAA/B,IAAoC,SAAS,KAAK,0BAAiB,CAAvE,EAA0E;AACxE,UAAM,OAAO,GAAG,SAAS,KAAK,0BAAiB,CAA/B,GAAmC,GAAG,GAAG,CAAzC,GAA6C,GAAG,GAAG,CAAnE;AACA,WAAO,8BAAoB,GAApB,EAAyB,OAAzB,EAAkC,MAAlC,CAAP;AACD;;AACD,QAAM,QAAQ,GAAG,iBAAiB,CAAC,SAAD,CAAlC;AACA,SAAO;AAAE,IAAA,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAlB;AAAqB,IAAA,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;AAArC,GAAP;AACD,CAPM;;;;AASA,MAAM,cAAc,GAAG,CAAgB;AAAE,EAAA,MAAF;AAAU,EAAA,CAAV;AAAa,EAAA,CAAb;AAAgB,EAAA,GAAhB;AAAqB,EAAA;AAArB,CAAhB,EAA+C,SAA/C,KAA8E;AAC1G,MAAI,SAAS,KAAK,0BAAiB,CAA/B,IAAoC,SAAS,KAAK,0BAAiB,CAAvE,EAA0E;AACxE,UAAM,OAAO,GAAG,SAAS,KAAK,0BAAiB,CAA/B,GAAmC,GAAG,GAAG,CAAzC,GAA6C,GAAG,GAAG,CAAnE;AACA,WAAO,4BAAkB,OAAlB,EAA2B,GAA3B,EAAgC,MAAhC,CAAP;AACD;;AACD,QAAM,QAAQ,GAAG,eAAe,CAAC,SAAD,CAAhC;AACA,SAAO;AAAE,IAAA,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAlB;AAAqB,IAAA,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;AAArC,GAAP;AACD,CAPM;;;;AASA,MAAM,UAAU,GAAG,CAAgB,GAAhB,EAAwB,SAAxB,KACxB,GAAG,CAAC,QAAJ,GAAe,gBAAgB,CAAC,GAAD,EAAM,SAAN,CAA/B,GAAkD,cAAc,CAAC,GAAD,EAAM,SAAN,CAD3D;;;;;;;;;;AC1CP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;ACFA;;AACA;;AAGM,MAAO,IAAP,CAAW;AAmCf,EAAA,WAAA,CAAmB,YAAnB,EAAoC,iBAApC,EAAsG;AAAnF,SAAA,YAAA,GAAA,YAAA;AAVnB,SAAA,KAAA,GAAQ,IAAI,GAAJ,EAAR;;AACA,SAAA,MAAA,GAAU,WAAD,IAAiC;AACxC,YAAM,GAAG,GAAG,oBAAU,KAAK,YAAf,EAA6B,KAA7B,CAAmC,WAAnC,CAAZ,CADwC,CACoB;;AAC5D,aAAO,KAAK,KAAL,CAAW,GAAX,CAAe,GAAG,CAAC,QAAJ,EAAf,KAAkC,GAAzC;AACD,KAHD;;AAKQ,SAAA,gBAAA,GAAmC,OAAO;AAAE,MAAA,KAAK,EAAE,EAAT;AAAa,MAAA,MAAM,EAAE;AAArB,KAAP,CAAnC;;AAKN,QAAI,iBAAiB,YAAY,GAAjC,EAAsC;AACpC,WAAK,gBAAL,GAAwB,MAAK;AAC3B,cAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,iBAAiB,CAAC,MAAlB,EAAX,CAAd;AACA,eAAO;AAAE,UAAA,KAAF;AAAS,UAAA,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB;AAAtB,SAAP;AACD,OAHD;;AAIA,WAAK,KAAL,GAAa,IAAI,GAAJ,CAAQ,iBAAR,CAAb;AACD,KAND,MAMO,IAAI,iBAAJ,EAAuB;AAC5B,YAAM,KAAK,GAAG,6BAAa,iBAAb,EAAgC,KAAK,MAAL,EAAhC,EAA+C,KAAK,MAApD,CAAd;;AACA,WAAK,gBAAL,GAAwB,OAAO;AAAE,QAAA,KAAF;AAAS,QAAA,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB;AAAtB,OAAP,CAAxB;;AACA,WAAK,KAAL,GAAa,IAAI,GAAJ,CAAQ,KAAK,CAAC,GAAN,CAAW,GAAD,IAAS,CAAC,GAAG,CAAC,QAAJ,EAAD,EAAiB,GAAjB,CAAnB,CAAR,CAAb;AACD;AACF;;AA9CU,SAAJ,IAAI,CAAgB,QAAhB,EAAsD;AAC/D,QAAI,QAAJ;AACA,QAAI,KAAJ;;AAEA,QAAI,QAAQ,YAAY,GAAxB,EAA6B;AAC3B,MAAA,QAAQ,GAAG,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,QAAzB,IAAqC,IAArC,GAA4C,KAAvD;AACA,MAAA,KAAK,GAAG,QAAR;AACD,KAHD,MAGO;AACL,YAAM,KAAK,GAAG,KAAK,CAAC,IAAN,CAAW,QAAX,CAAd;AACA,MAAA,QAAQ,GAAG,KAAK,CAAC,CAAD,CAAhB;AACA,MAAA,KAAK,GAAG,IAAI,GAAJ,CAAQ,KAAK,CAAC,GAAN,CAAW,GAAD,IAAS,CAAC,GAAG,CAAC,QAAJ,EAAD,EAAiB,GAAjB,CAAnB,CAAR,CAAR;AACD;;AAED,QAAI,CAAC,QAAL,EAAe;AACb,YAAM,IAAI,KAAJ,CAAU,0CAA0C,QAAQ,EAA5D,CAAN;AACD;;AAED,WAAO,IAAI,IAAJ,CAAY,MAAM,CAAC,cAAP,CAAsB,QAAtB,CAAZ,EAA6C,KAA7C,CAAP;AACD;;AAEsB,OAAlB,MAAM,CAAC,WAAW,IAAC;AACtB,WAAO,MAAP;AACD;;AA0BgB,IAAf,MAAM,CAAC,QAAQ,IAAC;AAChB,SAAK,MAAM,GAAX,IAAkB,KAAK,gBAAL,CAAsB,IAAtB,EAA4B,KAA9C,EAAqD;AACnD,YAAM,GAAN;AACD;AACF;;AAED,EAAA,IAAI,CAAC,QAAD,EAA4B;AAC9B,UAAM,IAAI,GAAoB,WAAD,IAAgB;AAC3C,YAAM,YAAY,GAAG,KAAK,gBAAL,CAAsB,WAAtB,CAArB;;AACA,WAAK,MAAM,GAAX,IAAkB,YAAY,CAAC,KAA/B,EAAsC;AACpC,QAAA,QAAQ,CAAC,GAAD,EAAM,WAAN,CAAR;AACD;;AACD,aAAO,YAAP;AACD,KAND;;AAOA,WAAO,KAAK,MAAL,CAAY,IAAZ,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,SAAD,EAAgC;AACpC,UAAM,MAAM,GAAoB,WAAD,IAAgB;AAC7C,YAAM,SAAS,GAAQ,EAAvB;;AACA,YAAM,YAAY,GAAG,KAAK,gBAAL,CAAsB,WAAtB,CAArB;;AACA,UAAI,MAAM,GAAG,YAAY,CAAC,MAA1B;;AAEA,WAAK,MAAM,GAAX,IAAkB,YAAY,CAAC,KAA/B,EAAsC;AACpC,YAAI,SAAS,CAAC,GAAD,EAAM,WAAN,CAAb,EAAiC;AAC/B,UAAA,MAAM,GAAG,GAAT;AACA,UAAA,SAAS,CAAC,IAAV,CAAe,MAAf;AACD;AACF;;AAED,aAAO;AAAE,QAAA,KAAK,EAAE,SAAT;AAAoB,QAAA;AAApB,OAAP;AACD,KAbD;;AAeA,WAAO,KAAK,MAAL,CAAY,MAAZ,CAAP;AACD;;AAED,EAAA,SAAS,CAAC,SAAD,EAAgC;AACvC,UAAM,SAAS,GAAoB,WAAD,IAAgB;AAChD,YAAM,SAAS,GAAQ,EAAvB;;AACA,YAAM,YAAY,GAAG,KAAK,gBAAL,CAAsB,WAAtB,CAArB;;AACA,UAAI,MAAM,GAAG,YAAY,CAAC,MAA1B;;AAEA,WAAK,MAAM,GAAX,IAAkB,YAAY,CAAC,KAA/B,EAAsC;AACpC,YAAI,CAAC,SAAS,CAAC,GAAD,EAAM,WAAN,CAAd,EAAkC;AAChC,iBAAO;AAAE,YAAA,KAAK,EAAE,SAAT;AAAoB,YAAA;AAApB,WAAP;AACD;;AACD,QAAA,MAAM,GAAG,GAAT;AACA,QAAA,SAAS,CAAC,IAAV,CAAe,MAAf;AACD;;AAED,aAAO;AAAE,QAAA,KAAK,EAAE,SAAT;AAAoB,QAAA;AAApB,OAAP;AACD,KAdD;;AAgBA,WAAO,KAAK,MAAL,CAAY,SAAZ,CAAP;AACD;;AAED,EAAA,QAAQ,CAAC,UAAD,EAA0C;AAChD,UAAM,QAAQ,GAAoB,WAAD,IAAgB;AAC/C,YAAM,SAAS,GAAQ,EAAvB;AACA,UAAI,MAAM,GAAG,KAAK,gBAAL,CAAsB,WAAtB,EAAmC,MAAnC,IAA6C,KAAK,MAAL,EAA1D;;AAEA,WAAK,MAAM,UAAX,IAAyB,6BAAa,UAAb,EAAyB,MAAzB,EAAiC,KAAK,MAAtC,CAAzB,EAAwE;AACtE,QAAA,MAAM,GAAG,UAAT;AACA,QAAA,SAAS,CAAC,IAAV,CAAe,MAAf;AACD;;AAED,aAAO;AAAE,QAAA,KAAK,EAAE,SAAT;AAAoB,QAAA;AAApB,OAAP;AACD,KAVD;;AAYA,WAAO,KAAK,MAAL,CAAY,QAAZ,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,QAAD,EAA6B;AAC9B,SAAK,MAAM,GAAX,IAAkB,KAAK,gBAAL,CAAsB,IAAtB,EAA4B,KAA9C,EAAqD;AACnD,MAAA,QAAQ,IAAI,QAAQ,CAAC,GAAD,EAAM,IAAN,CAApB;AACD;;AACD,WAAO,IAAP;AACD;;AAEO,EAAA,MAAM,CAAC,WAAD,EAA4B;AACxC,UAAM,OAAO,GAAG,IAAI,IAAJ,CAAS,KAAK,YAAd,EAA4B,KAAK,KAAjC,CAAhB;AACA,IAAA,OAAO,CAAC,gBAAR,GAA2B,WAA3B;AACA,WAAO,OAAP;AACD;;AApIc;;;;;;;;;;;ACDV,MAAM,EAAE,GAAmB,WAAhB,IAA8D,CAAC,CAAD,EAAI,MAAJ,KAAe,CAAC,MAAM,CAAC,WAAD,CAAP,CAAxF;;;AAEA,MAAM,KAAK,GAAG,EAAd;;;;;;;;;;ACJP;;AAGA;;;;;AAKO,MAAM,MAAM,GAAG,CACpB,MADoB,EAEpB,MAFoB,KAGH,CAAC,MAAD,EAAS,MAAT,KAAmB;AACpC,QAAM,UAAU,GAAG,6BAAa,MAAb,CAAnB;AACA,QAAM,MAAM,GAAQ,EAApB;AACA,MAAI,OAAO,GAAG,MAAd;;AAEA,OAAK,MAAM,YAAX,IAA2B,6BAAa,MAAb,EAAqB,OAArB,EAA8B,MAA9B,CAA3B,EAAkE;AAChE,IAAA,OAAO,GAAG,YAAV;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,OAAZ;;AACA,SAAK,MAAM,YAAX,IAA2B,UAAU,CAAC,OAAD,EAAU,MAAV,CAArC,EAAwD;AACtD,MAAA,MAAM,CAAC,IAAP,CAAY,YAAZ;AACD;AACF;;AAED,SAAO,MAAP;AACD,CAjBM;;;;;;;;;;;ACPP;;AAGO,MAAM,IAAI,GAAG,CAAgB,SAAhB,EAA6C,KAAK,GAAG,CAArD,KAAwE;AAC1F,SAAO,CAAC,MAAD,EAAS,MAAT,KAAmB;AACxB,UAAM,MAAM,GAAQ,EAApB;AACA,QAAI,OAAO,GAAG,MAAd;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,KAArB,EAA4B,CAAC,EAA7B,EAAiC;AAC/B,MAAA,OAAO,GAAG,MAAM,CAAC,2BAAW,OAAX,EAAoB,SAApB,CAAD,CAAhB;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,OAAZ;AACD;;AAED,WAAO,MAAP;AACD,GAVD;AAWD,CAZM;;;;;;;;;;;ACLP;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAMM,SAAU,SAAV,CACJ,gBADI,EAEJ,OAFI,EAEoB;AAExB,SAAO,CAAC,MAAD,EAAS,MAAT,KAAmB;AACxB,UAAM;AAAE,MAAA,KAAF;AAAS,MAAA,MAAT;AAAiB,MAAA,KAAK,GAAG;AAAE,QAAA,CAAC,EAAE,CAAL;AAAQ,QAAA,CAAC,EAAE;AAAX,OAAzB;AAAyC,MAAA,SAAS,GAAG,0BAAiB;AAAtE,QAA4E,OAAO,GACrF,0BAA0B,CAAC,gBAAD,EAAqC,OAArC,EAA8C,MAAM,CAAC,QAArD,EAA+D,MAAM,CAAC,MAAtE,CAD2D,GAEpF,gBAFL;AAIA,WAAO,oBAAU,CAAC,YAAG,KAAH,CAAD,EAAY,gBAAK,iBAAQ,MAAR,CAAe,SAAf,EAA0B,CAA1B,CAAL,EAAmC,MAAM,GAAG,CAA5C,CAAZ,CAAV,EAAuE,gBAAK,SAAL,EAAgB,KAAK,GAAG,CAAxB,CAAvE,EACL,MADK,EAEL,MAFK,CAAP;AAID,GATD;AAUD;;AASD,SAAS,0BAAT,CACE,OADF,EAEE,OAFF,EAGE,QAHF,EAIE,MAJF,EAIgB;AAEd,QAAM;AAAE,IAAA,GAAG,EAAE,UAAP;AAAmB,IAAA,GAAG,EAAE;AAAxB,MAAuC,uBAAuB,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAApE;AACA,QAAM;AAAE,IAAA,GAAG,EAAE,UAAP;AAAmB,IAAA,GAAG,EAAE;AAAxB,MAAuC,uBAAuB,CAAC,OAAD,EAAU,QAAV,EAAoB,MAApB,CAApE;AACA,QAAM,WAAW,GAAG,UAAU,GAAG,UAAb,GAA0B,GAA1B,GAAgC,GAApD;AACA,QAAM,WAAW,GAAG,UAAU,GAAG,UAAb,GAA0B,GAA1B,GAAgC,GAApD;AACA,QAAM,cAAc,GAAI,WAAW,GAAG,WAAtC;AACA,QAAM;AAAE,IAAA,eAAF;AAAmB,IAAA;AAAnB,MAAiC,0BAA0B,CAAC,cAAD,CAAjE;AACA,QAAM,KAAK,GAAG,IAAI,CAAC,GAAL,CAAS,UAAU,GAAG,UAAtB,IAAoC,CAAlD;AACA,QAAM,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,UAAU,GAAG,UAAtB,IAAoC,CAAnD;AAEA,SAAO;AACL,IAAA,KAAK,EAAE,eAAe,GAAG,MAAH,GAAY,KAD7B;AAEL,IAAA,MAAM,EAAE,eAAe,GAAG,KAAH,GAAW,MAF7B;AAGL,IAAA,KAAK,EAAE,OAHF;AAIL,IAAA;AAJK,GAAP;AAMD;;AAED,SAAS,uBAAT,CAAiC,OAAjC,EAA0D,QAA1D,EAA6E,MAA7E,EAA2F;AACzF,SAAO,qBAAS,OAAT,IAAoB,OAApB,GAA8B,sBAAY;AAAE,IAAA,CAAC,EAAE,OAAO,CAAC,CAAb;AAAgB,IAAA,CAAC,EAAE,OAAO,CAAC,CAA3B;AAA8B,IAAA,QAA9B;AAAwC,IAAA;AAAxC,GAAZ,CAArC;AACD;;AAED,MAAM,0BAA0B,GAAG;AACjC,EAAA,EAAE,EAAE;AACF,IAAA,eAAe,EAAE,KADf;AAEF,IAAA,SAAS,EAAE,0BAAiB;AAF1B,GAD6B;AAKjC,EAAA,EAAE,EAAE;AACF,IAAA,eAAe,EAAE,IADf;AAEF,IAAA,SAAS,EAAE,0BAAiB;AAF1B,GAL6B;AASjC,EAAA,EAAE,EAAE;AACF,IAAA,eAAe,EAAE,IADf;AAEF,IAAA,SAAS,EAAE,0BAAiB;AAF1B,GAT6B;AAajC,EAAA,EAAE,EAAE;AACF,IAAA,eAAe,EAAE,KADf;AAEF,IAAA,SAAS,EAAE,0BAAiB;AAF1B;AAb6B,CAAnC;AAmBA;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;AC5IA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;ACFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AACA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;ACHA;;AACA;;AACA;;AAMA,MAAM,YAAY,GAAG,6BAA8B;AACjD,EAAA,UAAU,EAAE;AAAE,IAAA,KAAK,EAAE,EAAT;AAAa,IAAA,MAAM,EAAE;AAArB,GADqC;AAEjD,EAAA,WAAW,EAAE,MAFoC;AAGjD,EAAA,MAAM,EAAE;AAHyC,CAA9B,CAArB;AAMA,MAAM,IAAI,GAAG,IAAI,SAAJ,CAAS,YAAT,EAAuB,oBAAU;AAAE,EAAA,KAAK,EAAE,EAAT;AAAa,EAAA,MAAM,EAAE;AAArB,CAAV,CAAvB,CAAb,EACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,YAAY,GAAI,UAAD,IAAyB;AAC5C,QAAM,UAAU,GAAa,EAA7B;AAEA,QAAM,KAAK,GAAe,EAA1B;AACA,EAAA,UAAU,CAAC,OAAX,CAAoB,IAAD,IAAS;AAC1B,UAAM,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,CAApC,CAD0B,CACY;;AACtC,IAAA,UAAU,CAAC,IAAX,CAAgB,SAAhB;AAEA,UAAM,SAAS,GAAG,CAAC,CAAC,IAAI,CAAC,CAAD,CAAxB;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,SAAS,GAAG,CAAC,GAAG,aAAM,SAAN,CAAJ,EAAsB,OAAtB,EAAH,GAAqC,aAAM,SAAN,CAAzD;AACD,GAND;AAQA,QAAM,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAI,IAAI,GAAG,CAAhB,EAAmB,IAAI,GAAG,CAA1B,EAA6B,IAAI,EAAjC,EAAqC;AACnC,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB,EAA4B;AAC1B,WAAK,IAAI,UAAU,GAAG,CAAtB,EAAyB,UAAU,GAAG,CAAtC,EAAyC,UAAU,EAAnD,EAAuD;AACrD,cAAM,SAAS,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,CAAR,CAAX,CAAvB;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,SAAS,CAAC,CAAC,GAAG,CAAJ,GAAQ,UAAT,CAArB;AACD;;AACD,WAAK,IAAI,UAAU,GAAG,CAAtB,EAAyB,UAAU,GAAG,CAAtC,EAAyC,UAAU,EAAnD,EAAuD;AACrD,cAAM,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,CAAP,GAAW,CAAZ,CAAX,CAAxB;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,UAAU,CAAC,CAAC,GAAG,CAAJ,GAAQ,UAAT,CAAtB;AACD;AACF;AACF;;AAED,SAAO,MAAP;AACD,CA5BD;;AA8BA,MAAM,WAAW,GAAI,UAAD,IAAyB;AAC3C,QAAM,eAAe,GAAqB,EAA1C;AACA,QAAM,YAAY,GAAG,YAAY,CAAC,UAAD,CAAjC,CAF2C,CAI3C;;AACA,MAAI,KAAK,GAAG,CAAZ;AACA,EAAA,IAAI,CACD,IADH,CACQ,CAAC,GAAD,EAAM,IAAN,KAAc;AAClB,IAAA,GAAG,CAAC,OAAJ,GAAc,YAAY,CAAC,KAAD,CAA1B;AACA,IAAA,eAAe,CAAC,IAAhB,CAAqB,GAArB,EAFkB,CAGlB;AACA;;AACA,IAAA,KAAK,GALa,CAMlB;AACD,GARH,EASG,GATH;AAUA,yBAAU,eAAV;AACD,CAjBD;;AAmBA,MAAM,eAAe,GAAG,MAAK;AAC3B,QAAM,MAAM,GAAa,EAAzB;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,OAAhB,CAAwB,IAAxB,CAA6B,QAAQ,CAAC,gBAAT,CAA0B,mBAA1B,CAA7B,EAA6E,CAAC,EAAD,EAAK,CAAL,KAC3E,MAAM,CAAC,IAAP,CAAY,EAAE,CAAC,KAAH,IAAY,CAAC,GAAG,CAA5B,CADF;AAGA,EAAA,QAAQ,CAAC,gBAAT,CAA0B,2BAA1B,EAAuD,OAAvD,CAA+D,CAAC,EAAD,EAAK,CAAL,KAAU;AACvE,UAAM,OAAO,GAAG,EAAhB;AACA,IAAA,MAAM,CAAC,CAAD,CAAN,IAAa,OAAO,CAAC,OAAR,GAAkB,GAAlB,GAAwB,EAArC;AACD,GAHD;AAIA,EAAA,WAAW,CAAC,MAAD,CAAX;AACD,CAVD;;AAYA,QAAQ,CAAC,gBAAT,CAA0B,mBAA1B,EAA+C,OAA/C,CAAwD,EAAD,IAAQ,EAAE,CAAC,gBAAH,CAAoB,OAApB,EAA6B,eAA7B,CAA/D;AAEA,QAAQ,CAAC,gBAAT,CAA0B,2BAA1B,EAAuD,OAAvD,CAAgE,EAAD,IAAO;AACpE,EAAA,EAAE,CAAC,gBAAH,CAAoB,QAApB,EAA8B,eAA9B;AACD,CAFD;AAIA,eAAe;;;ACxFf,IAAIA,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBI,IAAtB,CAA2BD,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTE,IAAAA,OAAO,EAAE,UAAUF,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBG,IAAvB,CAA4BD,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIY,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGhB,MAAM,CAACC,MAAP,CAAce,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIT,IAAI,GAAGmB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAClB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACAtB,MAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAItB,IAAI,CAACuB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACJ,IAAN,KAAe,KAAf,IAAwBI,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEApC,QAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAhB,QAAAA,cAAc,CAACe,OAAf,CAAuB,UAAUc,CAAV,EAAa;AAClCC,UAAAA,YAAY,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO,IAAIxB,QAAQ,CAAC0B,MAAb,EAAqB;AAAE;AAC5B1B,QAAAA,QAAQ,CAAC0B,MAAT;AACD;AACF;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAACyB,KAAH;;AACAzB,MAAAA,EAAE,CAAC0B,OAAH,GAAa,YAAY;AACvB5B,QAAAA,QAAQ,CAAC0B,MAAT;AACD,OAFD;AAGD;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,gBAAlB,EAAoC;AAClCc,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI5C,IAAI,CAACqB,IAAL,KAAc,OAAlB,EAA2B;AACzBc,MAAAA,OAAO,CAACU,KAAR,CAAc,kBAAkB7C,IAAI,CAAC6C,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C9C,IAAI,CAAC6C,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAACjD,IAAD,CAAhC;AACAkD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB7D,UAAxB,CAAd;;AACA,MAAIwD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4BjD,IAA5B,EAAkC;AAChC,MAAIgD,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAACjB,EAAR,GAAavC,UAAb,CAFgC,CAIhC;;AACA,MAAIsD,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoBzD,IAAI,CAAC6C,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuBzD,IAAI,CAAC6C,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoBhE,MAApB,EAA4BoC,EAA5B,EAAgC;AAC9B,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,GAAV;;AAEA,OAAKF,CAAL,IAAUF,OAAV,EAAmB;AACjB,SAAKG,CAAL,IAAUH,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvBE,MAAAA,GAAG,GAAGJ,OAAO,CAACE,CAAD,CAAP,CAAW,CAAX,EAAcC,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKjC,EAAR,IAAekC,KAAK,CAACC,OAAN,CAAcF,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACG,MAAJ,GAAa,CAAd,CAAH,KAAwBpC,EAAjE,EAAsE;AACpE8B,QAAAA,OAAO,CAACvD,IAAR,CAAawD,CAAb;AACD;AACF;AACF;;AAED,MAAInE,MAAM,CAACe,MAAX,EAAmB;AACjBmD,IAAAA,OAAO,GAAGA,OAAO,CAACO,MAAR,CAAeT,UAAU,CAAChE,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO8B,OAAP;AACD;;AAED,SAASxB,QAAT,CAAkB1C,MAAlB,EAA0B8B,KAA1B,EAAiC;AAC/B,MAAImC,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACpC,MAAM,CAACe,MAAjC,EAAyC;AACvC,QAAIL,EAAE,GAAG,IAAIgE,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C5C,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACkC,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAtB;AACA6B,IAAAA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC1B,EAAD,EAAKoB,KAAK,CAAC6C,IAAX,CAApB;AACD,GAJD,MAIO,IAAI3E,MAAM,CAACe,MAAX,EAAmB;AACxB2B,IAAAA,QAAQ,CAAC1C,MAAM,CAACe,MAAR,EAAgBe,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBjC,MAAxB,EAAgCoC,EAAhC,EAAoC;AAClC,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC7B,EAAD,CAAR,IAAgBpC,MAAM,CAACe,MAA3B,EAAmC;AACjC,WAAOkB,cAAc,CAACjC,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAArB;AACD;;AAED,MAAIvB,aAAa,CAACuB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDvB,EAAAA,aAAa,CAACuB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AAEAtB,EAAAA,cAAc,CAACH,IAAf,CAAoB,CAACX,MAAD,EAASoC,EAAT,CAApB;;AAEA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAOR,UAAU,CAAC9B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqC0C,IAArC,CAA0C,UAAU1C,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASQ,YAAT,CAAsB5C,MAAtB,EAA8BoC,EAA9B,EAAkC;AAChC,MAAIwC,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAb;AACApC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAIsE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACxE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAIsE,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BgE,MAAzD,EAAiE;AAC/DI,IAAAA,MAAM,CAACxE,GAAP,CAAWI,iBAAX,CAA6BqB,OAA7B,CAAqC,UAAUkD,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC/E,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAP;AACApC,EAAAA,MAAM,CAACoC,EAAD,CAAN;AAEAwC,EAAAA,MAAM,GAAG5E,MAAM,CAAC6E,KAAP,CAAazC,EAAb,CAAT;;AACA,MAAIwC,MAAM,IAAIA,MAAM,CAACxE,GAAjB,IAAwBwE,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BiE,MAAxD,EAAgE;AAC9DI,IAAAA,MAAM,CAACxE,GAAP,CAAWG,gBAAX,CAA4BsB,OAA5B,CAAoC,UAAUkD,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"playground.0266f34f.js","sourceRoot":"..","sourcesContent":["export const D = 'desert',\n  F = 'forest',\n  M = 'mountain',\n  S = 'swamp',\n  W = 'water',\n  DB = 'desert bears',\n  FB = 'forest bears',\n  MB = 'mountain bears',\n  WB = 'water bears',\n  FC = 'forest cougars',\n  MC = 'mountain cougars',\n  SC = 'swamp cougars',\n  WC = 'water cougars'\n\nexport const TILE_ONE = [W, W, W, W, F, F, S, S, W, D, F, F, S, S, D, DB, DB, FB]\nexport const TILE_TWO = [SC, FC, FC, F, F, F, S, S, F, D, D, D, S, M, M, M, M, D]\nexport const TILE_THREE = [S, S, F, F, F, W, SC, SC, F, M, W, W, MC, M, M, M, W, W]\nexport const TILE_FOUR = [D, D, M, M, M, M, D, D, M, W, W, WC, D, D, D, F, F, FC]\nexport const TILE_FIVE = [S, S, S, M, M, M, S, D, D, W, M, MB, D, D, W, W, WB, WB]\nexport const TILE_SIX = [DB, D, S, S, S, F, MB, M, S, S, F, F, M, W, W, W, W, F]\n\nexport const TILES = [TILE_ONE, TILE_TWO, TILE_THREE, TILE_FOUR, TILE_FIVE, TILE_SIX]\n\n// def upside_down(tile_number)\n//   TILES[tile_number].reverse\n// end\n","import { Hex } from '../dist'\nimport { D, F, M, S, W } from './tiles'\n\n// declare const SVG: any\n\n// const draw = SVG().addTo('.js-map').size('100%', '100%')\n\nconst mapWrapperEl = document.querySelector('.js-map')\nif (!mapWrapperEl) {\n  throw new Error('Map element not found')\n}\n\nexport const renderAll = (hexes: HexWithTerrain[]) => {\n  mapWrapperEl.innerHTML = `\n    <svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='555px' height='494px'>\n      <g>\n        ${hexes.map((hex) => render(hex)).join('')}\n      </g>\n    </svg>\n  `\n}\n\nconst fillHexagon = (hex: HexWithTerrain) => {\n  let fill = 'none'\n  if (hex.terrain?.includes(F)) {\n    fill = '#009900'\n  } else if (hex.terrain?.includes(W)) {\n    fill = '#2596be'\n  } else if (hex.terrain?.includes(D)) {\n    fill = '#ffcc00'\n  } else if (hex.terrain?.includes(M)) {\n    fill = 'gray'\n  } else if (hex.terrain?.includes(S)) {\n    fill = 'purple'\n  }\n  // const polygon = draw.polygon(hex.corners.map(({ x, y }) => `${x},${y}`)).fill(fill)\n  // draw.group().add(polygon)\n  return ` \n    <polygon points='${hex.corners.map(({ x, y }) => `${x},${y}`).join(',')}' fill='${fill}'></polygon>\n  `\n}\n\nexport type HexWithTerrain = Hex & { terrain?: string }\n\nconst BORDER_DISTANCE = 3\nconst DX = [-0.75, -1, -0.75, 0.75, 1, 0.75]\nconst DY = [0.75, 0, -0.75, -0.75, 0, 0.75]\nconst addBearsAndCougars = (hex: HexWithTerrain) => {\n  if (!hex.terrain?.includes('bears') && !hex.terrain?.includes('cougars')) {\n    return\n  }\n\n  const stroke: any = { width: 1.5 }\n  if (hex.terrain?.includes('bears')) {\n    stroke.color = '#000'\n    stroke.dasharray = 4\n  } else if (hex.terrain?.includes('cougars')) {\n    stroke.color = '#c00'\n  }\n\n  // const polygon2 = draw\n  //   .polygon(\n  //     hex.corners.map(({ x, y }, i) => {\n  //       x += BORDER_DISTANCE * DX[i]\n  //       y += BORDER_DISTANCE * DY[i]\n  //       return `${x},${y}`\n  //     }),\n  //   )\n  //   .fill('none')\n  //   .stroke(stroke)\n  // draw.group().add(polygon2)\n\n  return `\n    <polygon points='${hex.corners.map(({ x, y }, i) => {\n      x += BORDER_DISTANCE * DX[i]\n      y += BORDER_DISTANCE * DY[i]\n      return `${x},${y}`\n    })}' fill='none' stroke-width='1.5' stroke='${stroke.color}' />\n  `\n}\n\nconst addCoordinates = (hex: Hex) => {\n  // const text = draw\n  //   .text(`${hex.q},${hex.r}`)\n  //   // .text(`${hex.col},${hex.row}`)\n  //   .font({\n  //     size: hex.width * 0.25,\n  //     anchor: 'middle',\n  //     'dominant-baseline': 'central',\n  //     leading: 0,\n  //   })\n  //   .translate(hex.x, hex.y)\n  // draw.add(text)\n  return `\n    <text font-size='${hex.width * 0.25}' text-anchor='middle' dominant-baseline='central' transform='matrix(1,0,0,1,${\n    hex.x\n  },${hex.y})'>\n      <tspan dy='0' x='0'>${hex.q},${hex.r}</tspan>\n    </text>\n  `\n}\n\nexport const render = (hex: HexWithTerrain): string => {\n  let result = ''\n  result += fillHexagon(hex)\n  result += addBearsAndCougars(hex)\n  result += addCoordinates(hex)\n  return result\n}\n","export enum CardinalCompassDirection {\n  N = 0,\n  E = 2,\n  S = 4,\n  W = 6,\n}\n\nexport enum OrdinalCompassDirection {\n  NE = 1,\n  SE = 3,\n  SW = 5,\n  NW = 7,\n}\n\nexport enum CompassDirection {\n  N,\n  NE,\n  E,\n  SE,\n  S,\n  SW,\n  W,\n  NW,\n}\n\nexport type CompassDirectionLike = keyof typeof CompassDirection | number\n\nexport class Compass {\n  static N = CompassDirection.N\n  static NE = CompassDirection.NE\n  static E = CompassDirection.E\n  static SE = CompassDirection.SE\n  static S = CompassDirection.S\n  static SW = CompassDirection.SW\n  static W = CompassDirection.W\n  static NW = CompassDirection.NW\n  static Cardinal: CardinalCompassDirection\n  static Ordinal: OrdinalCompassDirection\n\n  static of(direction: CompassDirectionLike = CompassDirection.N) {\n    return new Compass(direction)\n  }\n\n  static isCardinal(direction: CompassDirection) {\n    return !!CardinalCompassDirection[direction]\n  }\n\n  static isOrdinal(direction: CompassDirection) {\n    return !!OrdinalCompassDirection[direction]\n  }\n\n  static rotate(direction: number, steps: number): CompassDirection {\n    return signedModulo(direction + steps, 8)\n  }\n\n  direction: CompassDirection\n\n  constructor(direction: CompassDirectionLike = CompassDirection.N) {\n    this.direction = typeof direction === 'number' ? direction : CompassDirection[direction]\n  }\n\n  isCardinal() {\n    return Compass.isCardinal(this.direction)\n  }\n\n  isOrdinal() {\n    return Compass.isOrdinal(this.direction)\n  }\n\n  rotate(steps: number) {\n    return Compass.rotate(this.direction, steps)\n  }\n}\n\n// todo: move to utils?\nfunction signedModulo(dividend: number, divisor: number) {\n  return ((dividend % divisor) + divisor) % divisor\n}\n","export * from './compass'\n","import { Hex, HexCoordinates } from '../../hex'\nimport { Traverser } from '../types'\n\n// todo: rename?\nexport const flatTraverse = <T extends Hex>(traversers: Traverser<T> | Traverser<T>[]) => (\n  cursor: T,\n  getHex: (coordinates: HexCoordinates) => T,\n) => {\n  if (!Array.isArray(traversers)) {\n    return Array.from(traversers(cursor, getHex))\n  }\n\n  const nextHexes: T[] = []\n  for (const traverser of traversers) {\n    for (const nextCursor of traverser(cursor, getHex)) {\n      cursor = nextCursor\n      nextHexes.push(cursor)\n    }\n  }\n  return nextHexes\n}\n","import { Hex } from '../../hex'\nimport { Grid } from '../grid'\n\nexport const inStore = <T extends Hex>(hex: T, grid: Grid<T>) => grid.store.has(hex.toString())\n","/**\n * In TypeScript: pass a type variable to isObject() for best result. E.g.: `isObject<MyObject>(value)`\n */\nexport const isObject = <T = Record<string, unknown>>(value: unknown): value is T =>\n  typeof value === 'object' && value !== null\n","import { AxialCoordinates } from '../hex'\nimport { isObject } from './isObject'\n\nexport const isAxial = (value: unknown): value is AxialCoordinates =>\n  isObject<AxialCoordinates>(value) && Number.isFinite(value.q) && Number.isFinite(value.r)\n","interface UnknownFunction {\n  (...args: unknown[]): unknown\n}\n\nexport const isFunction = <T = UnknownFunction>(value: unknown): value is T => typeof value === 'function'\n","import { OffsetCoordinates } from '../hex'\nimport { isObject } from './isObject'\n\nexport const isOffset = (value: unknown): value is OffsetCoordinates =>\n  isObject<OffsetCoordinates>(value) && Number.isFinite(value.col) && Number.isFinite(value.row)\n","import { Point } from '../hex'\nimport { isObject } from './isObject'\n\nexport const isPoint = (value: unknown): value is Point =>\n  isObject<Point>(value) && Number.isFinite(value.x) && Number.isFinite(value.y)\n","// todo: rename (also rename offset)?\n// todo: change to https://www.redblobgames.com/grids/hexagons/#conversions-offset\nexport const offsetFromZero = (offset: number, distance: number) => (distance + offset * (distance & 1)) >> 1\n","export * from './isAxial'\nexport * from './isFunction'\nexport * from './isObject'\nexport * from './isOffset'\nexport * from './isPoint'\nexport * from './offsetFromZero'\n","import { offsetFromZero } from '../../utils'\nimport { AxialCoordinates, HexPrototype, OffsetCoordinates } from '../types'\n\nexport const offsetToAxialPointy = (col: number, row: number, offset: number): AxialCoordinates => ({\n  q: col - offsetFromZero(offset, row),\n  r: row,\n})\n\nexport const offsetToAxialFlat = (col: number, row: number, offset: number): AxialCoordinates => ({\n  q: col,\n  r: row - offsetFromZero(offset, col),\n})\n\nexport const offsetToAxial = (\n  { col, row }: OffsetCoordinates,\n  { offset, isPointy }: Pick<HexPrototype, 'offset' | 'isPointy'>,\n) => (isPointy ? offsetToAxialPointy(col, row, offset) : offsetToAxialFlat(col, row, offset))\n","import { isOffset } from '../../utils'\nimport { Hex, HexCoordinates } from '../types'\nimport { offsetToAxial } from './offsetToAxial'\n\nexport const cloneHex = <T extends Hex>(hex: T, newProps: Partial<T> | HexCoordinates = {}): T => {\n  if (isOffset(newProps)) {\n    const { col, row, ...otherProps } = newProps\n    const coordinates = offsetToAxial({ col, row }, hex)\n    return Object.assign(Object.create(Object.getPrototypeOf(hex)), hex, coordinates, otherProps)\n  }\n\n  return Object.assign(Object.create(Object.getPrototypeOf(hex)), hex, newProps)\n}\n","// todo: move types to single file in /src\n// tried it and somehow typescript can't call origin as a function anymore in createHexPrototype.ts normalizeOrigin()\n\nexport interface Point {\n  x: number\n  y: number\n}\n\nexport const Orientations = {\n  FLAT: 'FLAT',\n  POINTY: 'POINTY',\n} as const\nexport type ValueOf<T> = T[keyof T]\nexport type Orientation = ValueOf<typeof Orientations>\n\nexport type OffsetCoordinates = {\n  col: number\n  row: number\n}\n\nexport interface AxialCoordinates {\n  q: number\n  r: number\n}\n\nexport interface CubeCoordinates extends AxialCoordinates {\n  s: number\n}\n\nexport type HexCoordinates = (AxialCoordinates & { s?: number }) | OffsetCoordinates\n\nexport interface Ellipse {\n  xRadius: number\n  yRadius: number\n}\n\nexport interface BoundingBox {\n  width: number\n  height: number\n}\n\nexport type hexDimensions = Ellipse | BoundingBox | number\n\nexport interface HexSettings {\n  dimensions: Ellipse\n  orientation: Orientation\n  origin: Point\n  offset: number\n}\n\nexport interface HexPrototype extends HexSettings {\n  readonly __isHoneycombHex: true\n  readonly [Symbol.toStringTag]: 'Hex'\n  readonly col: number\n  readonly corners: Point[]\n  readonly height: number\n  readonly isFlat: boolean\n  readonly isPointy: boolean\n  readonly row: number\n  readonly width: number\n  readonly x: number\n  readonly y: number\n\n  s: number\n\n  equals(this: this, coordinates: HexCoordinates): boolean\n\n  // todo: about 80% sure the newProps type works (it's used in more places, if it works: maybe make it a separate type?)\n  clone(this: this, newProps?: Partial<this> | HexCoordinates): this\n\n  toString(this: this): string\n}\n\nexport interface Hex extends HexPrototype, AxialCoordinates {}\n","import { HexSettings, Orientations } from '../types'\n\nexport const heightPointy = (yRadius: number) => yRadius * 2\n\nexport const heightFlat = (yRadius: number) => yRadius * Math.sqrt(3)\n\nexport const height = ({ orientation, dimensions: { yRadius } }: HexSettings) =>\n  orientation === Orientations.POINTY ? heightPointy(yRadius) : heightFlat(yRadius)\n","import { Hex, Orientations, Point } from '../types'\n\nexport const hexToPoint = ({ orientation, dimensions: { xRadius, yRadius }, origin: { x, y }, q, r }: Hex): Point =>\n  orientation === Orientations.POINTY\n    ? {\n        x: xRadius * Math.sqrt(3) * (q + r / 2) - x,\n        y: ((yRadius * 3) / 2) * r - y,\n      }\n    : {\n        x: ((xRadius * 3) / 2) * q - x,\n        y: yRadius * Math.sqrt(3) * (r + q / 2) - y,\n      }\n","import { isObject } from '../../utils'\nimport { Hex } from '../types'\n\nexport const isHex = (value: unknown): value is Hex =>\n  isObject<Hex>(value) && !!Object.getPrototypeOf(value).__isHoneycombHex\n","import { HexSettings, Orientations } from '../types'\n\nexport const widthPointy = (xRadius: number) => xRadius * Math.sqrt(3)\n\nexport const widthFlat = (xRadius: number) => xRadius * 2\n\nexport const width = ({ orientation, dimensions: { xRadius } }: HexSettings) =>\n  orientation === Orientations.POINTY ? widthPointy(xRadius) : widthFlat(xRadius)\n","import { Hex, HexSettings, Orientations, Point } from '../types'\nimport { heightFlat, heightPointy } from './height'\nimport { hexToPoint } from './hexToPoint'\nimport { isHex } from './isHex'\nimport { widthFlat, widthPointy } from './width'\n\nexport const cornersPointy = (width: number, height: number, { x, y }: Point) => [\n  { x: x + width * 0.5, y: y - height * 0.25 },\n  { x: x + width * 0.5, y: y + height * 0.25 },\n  { x, y: y + height * 0.5 },\n  { x: x - width * 0.5, y: y + height * 0.25 },\n  { x: x - width * 0.5, y: y - height * 0.25 },\n  { x, y: y - height * 0.5 },\n]\n\nexport const cornersFlat = (width: number, height: number, { x, y }: Point) => [\n  { x: x + width * 0.25, y: y - height * 0.5 },\n  { x: x + width * 0.5, y },\n  { x: x + width * 0.25, y: y + height * 0.5 },\n  { x: x - width * 0.25, y: y + height * 0.5 },\n  { x: x - width * 0.5, y },\n  { x: x - width * 0.25, y: y - height * 0.5 },\n]\n\n// todo: add to docs that when passed a hex, its corners relative to the \"origin hex\" are returned (different per hex coordinates)\n// and when passed hexSettings, corners relative to any hex's origin are returned (always the same)\nexport function corners(hex: Hex): Point[]\nexport function corners(hexSettings: Omit<HexSettings, 'offset'>): Point[]\nexport function corners(hexOrHexSettings: Omit<HexSettings, 'offset'>): Point[] {\n  const {\n    orientation,\n    dimensions: { xRadius, yRadius },\n  } = hexOrHexSettings\n  const point = isHex(hexOrHexSettings) ? hexToPoint(hexOrHexSettings) : hexOrHexSettings.origin\n  return orientation === Orientations.POINTY\n    ? cornersPointy(widthPointy(xRadius), heightPointy(yRadius), point)\n    : cornersFlat(widthFlat(xRadius), heightFlat(yRadius), point)\n}\n","import { isOffset } from '../../utils'\nimport { Hex, HexCoordinates } from '../types'\nimport { isHex } from './isHex'\nimport { offsetToAxial } from './offsetToAxial'\n\nexport const createHex = <T extends Hex>(prototypeOrHex: T, props: Partial<T> | HexCoordinates = { q: 0, r: 0 }): T => {\n  if (isHex(prototypeOrHex)) {\n    return prototypeOrHex.clone(props)\n  }\n\n  if (isOffset(props)) {\n    const { col, row, ...otherProps } = props\n    const coordinates = offsetToAxial({ col, row }, prototypeOrHex)\n    return Object.assign(Object.create(prototypeOrHex), coordinates, otherProps)\n  }\n\n  return Object.assign(Object.create(prototypeOrHex), props)\n}\n","import { isAxial } from '../../utils'\nimport { AxialCoordinates, HexCoordinates, OffsetCoordinates } from '../types'\n\nexport const equals = (a: HexCoordinates, b: HexCoordinates) =>\n  // when the 2nd coordinates is axial, assume the first is too\n  // when equals() is used as a hex method, the 1st coordinates is that of the hex itself which is always axial\n  isAxial(b) ? equalsAxial(a as AxialCoordinates, b) : equalsOffset(a as OffsetCoordinates, b as OffsetCoordinates)\n\nfunction equalsAxial(a: AxialCoordinates, b: AxialCoordinates) {\n  return a.q === b.q && a.r === b.r\n}\n\nfunction equalsOffset(a: OffsetCoordinates, b: OffsetCoordinates) {\n  return a.col === b.col && a.row === b.row\n}\n","import { offsetFromZero } from '../../utils'\nimport { Hex, OffsetCoordinates } from '../types'\n\nexport const hexToOffsetPointy = (q: number, r: number, offset: number): OffsetCoordinates => ({\n  col: q + offsetFromZero(offset, r),\n  row: r,\n})\n\nexport const hexToOffsetFlat = (q: number, r: number, offset: number): OffsetCoordinates => ({\n  col: q,\n  row: r + offsetFromZero(offset, q),\n})\n\nexport const hexToOffset = ({ q, r, offset, isPointy }: Pick<Hex, 'q' | 'r' | 'offset' | 'isPointy'>) =>\n  isPointy ? hexToOffsetPointy(q, r, offset) : hexToOffsetFlat(q, r, offset)\n","import { HexSettings, Orientations } from '../types'\n\nexport const isFlat = ({ orientation }: HexSettings) => orientation === Orientations.FLAT\n","import { HexSettings, Orientations } from '../types'\n\nexport const isPointy = ({ orientation }: HexSettings) => orientation === Orientations.POINTY\n","import { AxialCoordinates } from '../types'\n\nexport const toString = ({ q, r }: AxialCoordinates) => `${q},${r}`\n","import { isFunction, isObject, isPoint } from '../../utils'\nimport { BoundingBox, Ellipse, Hex, HexPrototype, HexSettings, Orientation, Orientations, Point } from '../types'\nimport { cloneHex } from './cloneHex'\nimport { corners } from './corners'\nimport { equals } from './equals'\nimport { height } from './height'\nimport { hexToOffset } from './hexToOffset'\nimport { hexToPoint } from './hexToPoint'\nimport { isFlat } from './isFlat'\nimport { isPointy } from './isPointy'\nimport { toString } from './toString'\nimport { width } from './width'\n\nexport const defaultHexSettings: HexSettings = {\n  dimensions: { xRadius: 1, yRadius: 1 },\n  orientation: Orientations.POINTY,\n  origin: { x: 0, y: 0 },\n  offset: -1,\n}\n\nexport const createHexPrototype = <T extends Hex>(options?: Partial<T | HexPrototypeOptions>): T => {\n  // pseudo private property\n  const s = new WeakMap()\n\n  const prototype = {\n    ...defaultHexSettings,\n    clone(newProps) {\n      return cloneHex(this, newProps)\n    },\n    equals(coordinates) {\n      return equals(this, coordinates)\n    },\n    toString() {\n      return toString(this)\n    },\n    // todo: add to docs that any of the above methods will be overwritten when present in customPrototype\n    ...options,\n  } as T & HexPrototypeOptions\n\n  // use Object.defineProperties() to create readonly properties\n  // origin is set in the final \"step\"\n  Object.defineProperties(prototype, {\n    [Symbol.toStringTag]: { value: 'Hex' },\n    __isHoneycombHex: { value: true, writable: false },\n    // todo: all props set with `value` are writable (somehow the default `writable: false` doesn't apply). Not sure if this is a problem though\n    // see: Object.getOwnPropertyDescriptors(hexPrototype)\n    col: {\n      get() {\n        return hexToOffset(this).col\n      },\n    },\n    corners: {\n      get() {\n        return corners(this)\n      },\n    },\n    dimensions: { value: normalizeDimensions(prototype) },\n    height: {\n      get() {\n        return height(this)\n      },\n    },\n    isFlat: {\n      get() {\n        return isFlat(this)\n      },\n    },\n    isPointy: {\n      get() {\n        return isPointy(this)\n      },\n    },\n    orientation: { value: normalizeOrientation(prototype) },\n    offset: { value: assertOffset(prototype) },\n    row: {\n      get() {\n        return hexToOffset(this).row\n      },\n    },\n    s: {\n      get() {\n        return Number.isFinite(s.get(this)) ? s.get(this) : -this.q - this.r\n      },\n      set(_s: number) {\n        s.set(this, _s)\n      },\n    },\n    width: {\n      get() {\n        return width(this)\n      },\n    },\n    x: {\n      get() {\n        return hexToPoint(this).x\n      },\n    },\n    y: {\n      get() {\n        return hexToPoint(this).y\n      },\n    },\n  } as PropertyDescriptorMap & ThisType<T & Hex>)\n\n  return Object.defineProperties(prototype, {\n    origin: { value: normalizeOrigin<T>(prototype) },\n  })\n}\n\nexport interface OriginFn {\n  <T extends Omit<HexPrototype, 'origin'>>(prototype: T): Point\n}\n\nexport interface HexPrototypeOptions {\n  dimensions: Ellipse | BoundingBox | number\n  orientation: Orientation\n  origin: Point | 'topLeft' | OriginFn\n  offset: number\n}\n\nfunction normalizeDimensions(prototype: HexPrototypeOptions) {\n  const { dimensions } = prototype\n\n  if (isObject(dimensions)) {\n    if ((dimensions as Ellipse).xRadius > 0 && (dimensions as Ellipse).yRadius > 0) {\n      return { ...(dimensions as Ellipse) }\n    }\n\n    const { width, height } = dimensions as BoundingBox\n    if (width > 0 && height > 0) {\n      return normalizeOrientation(prototype) === Orientations.POINTY\n        ? { xRadius: width / Math.sqrt(3), yRadius: height / 2 }\n        : { xRadius: width / 2, yRadius: height / Math.sqrt(3) }\n    }\n  }\n\n  if (dimensions > 0) {\n    return { xRadius: dimensions, yRadius: dimensions } as Ellipse\n  }\n\n  throw new TypeError(\n    `Invalid dimensions: ${dimensions}. Dimensions must be expressed as an Ellipse ({ xRadius: number, yRadius: number }), a Rectangle ({ width: number, height: number }) or a number.`,\n  )\n}\n\nfunction normalizeOrientation({ orientation }: HexPrototypeOptions) {\n  orientation = orientation as Orientation\n\n  if (orientation === Orientations.POINTY || orientation === Orientations.FLAT) {\n    return orientation\n  }\n\n  throw new TypeError(`Invalid orientation: ${orientation}. Orientation must be either 'POINTY' or 'FLAT'.`)\n}\n\nfunction assertOffset({ offset }: HexPrototypeOptions) {\n  if (!Number.isFinite(offset)) {\n    throw new TypeError(`Invalid offset: ${offset}. Offset must be a number.`)\n  }\n\n  return offset\n}\n\n// origin can be a function that will be called with the almost-complete hex prototype (complete except for origin)\nfunction normalizeOrigin<T extends HexPrototype>(\n  prototype: Omit<T, 'origin'> & Pick<HexPrototypeOptions, 'origin'>,\n): Point {\n  const { origin } = prototype\n\n  if (isPoint(origin)) {\n    return { ...origin }\n  }\n\n  if (origin === 'topLeft') {\n    return { x: prototype.width * -0.5, y: prototype.height * -0.5 }\n  }\n\n  if (isFunction<OriginFn>(origin)) {\n    return origin(prototype)\n  }\n\n  throw new TypeError(\n    `Invalid origin: ${origin}. Origin must be expressed as a Point ({ x: number, y: number }), 'topLeft' or a function that returns a Point.`,\n  )\n}\n","export * from './cloneHex'\nexport * from './corners'\nexport * from './createHex'\nexport * from './createHexPrototype'\nexport * from './equals'\nexport * from './height'\nexport * from './hexToOffset'\nexport * from './hexToPoint'\nexport * from './isFlat'\nexport * from './isHex'\nexport * from './isPointy'\nexport * from './offsetToAxial'\nexport * from './toString'\nexport * from './width'\n","export * from './functions'\nexport * from './types'\n","import { CompassDirection } from '../../compass'\nimport { AxialCoordinates, Hex, offsetToAxialFlat, offsetToAxialPointy } from '../../hex'\n\nconst DIRECTIONS_POINTY = [\n  null, // ambiguous\n  { q: 1, r: -1 }, // NE\n  { q: 1, r: 0 }, // E\n  { q: 0, r: 1 }, // SE\n  null, // ambiguous\n  { q: -1, r: 1 }, // SW\n  { q: -1, r: 0 }, // W\n  { q: 0, r: -1 }, // NW\n] as AxialCoordinates[]\nconst DIRECTIONS_FLAT = [\n  { q: 0, r: -1 }, // N\n  { q: 1, r: -1 }, // NE\n  null, // ambiguous\n  { q: 1, r: 0 }, // SE\n  { q: 0, r: 1 }, // S\n  { q: -1, r: 1 }, // SW\n  null, // ambiguous\n  { q: -1, r: 0 }, // NW\n] as AxialCoordinates[]\n\nexport const neighborOfPointy = <T extends Hex>({ offset, q, r, col, row }: T, direction: CompassDirection) => {\n  if (direction === CompassDirection.S || direction === CompassDirection.N) {\n    const nextRow = direction === CompassDirection.S ? row + 1 : row - 1\n    return offsetToAxialPointy(col, nextRow, offset)\n  }\n  const neighbor = DIRECTIONS_POINTY[direction]\n  return { q: q + neighbor.q, r: r + neighbor.r }\n}\n\nexport const neighborOfFlat = <T extends Hex>({ offset, q, r, col, row }: T, direction: CompassDirection) => {\n  if (direction === CompassDirection.E || direction === CompassDirection.W) {\n    const nextCol = direction === CompassDirection.E ? col + 1 : col - 1\n    return offsetToAxialFlat(nextCol, row, offset)\n  }\n  const neighbor = DIRECTIONS_FLAT[direction]\n  return { q: q + neighbor.q, r: r + neighbor.r }\n}\n\nexport const neighborOf = <T extends Hex>(hex: T, direction: CompassDirection) =>\n  hex.isPointy ? neighborOfPointy(hex, direction) : neighborOfFlat(hex, direction)\n","export * from './flatTraverse'\nexport * from './inStore'\nexport * from './neighborOf'\n","import { createHex, Hex, HexCoordinates } from '../hex'\nimport { flatTraverse } from './functions'\nimport { Callback, Traverser } from './types'\n\nexport class Grid<T extends Hex> {\n  static from<T extends Hex>(iterable: Map<string, T> | Iterable<T>) {\n    let firstHex: T\n    let store: Map<string, T>\n\n    if (iterable instanceof Map) {\n      firstHex = iterable.values()[Symbol.iterator]().next().value\n      store = iterable\n    } else {\n      const array = Array.from(iterable)\n      firstHex = array[0]\n      store = new Map(array.map((hex) => [hex.toString(), hex]))\n    }\n\n    if (!firstHex) {\n      throw new Error(`Can't create grid from empty iterable: ${iterable}`)\n    }\n\n    return new Grid<T>(Object.getPrototypeOf(firstHex), store)\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Grid'\n  }\n\n  store = new Map<string, T>()\n  getHex = (coordinates?: HexCoordinates) => {\n    const hex = createHex(this.hexPrototype).clone(coordinates) // clone to enable users to make custom hexes\n    return this.store.get(hex.toString()) ?? hex\n  }\n\n  private _getPrevHexState: GetHexState<T> = () => ({ hexes: [], cursor: null })\n\n  constructor(hexPrototype: T, traversers?: Traverser<T> | Traverser<T>[])\n  constructor(hexPrototype: T, store?: Map<string, T>)\n  constructor(public hexPrototype: T, traversersOrStore?: Traverser<T> | Traverser<T>[] | Map<string, T>) {\n    if (traversersOrStore instanceof Map) {\n      this._getPrevHexState = () => {\n        const hexes = Array.from(traversersOrStore.values())\n        return { hexes, cursor: hexes[hexes.length - 1] }\n      }\n      this.store = new Map(traversersOrStore)\n    } else if (traversersOrStore) {\n      const hexes = flatTraverse(traversersOrStore)(this.getHex(), this.getHex)\n      this._getPrevHexState = () => ({ hexes, cursor: hexes[hexes.length - 1] })\n      this.store = new Map(hexes.map((hex) => [hex.toString(), hex]))\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const hex of this._getPrevHexState(this).hexes) {\n      yield hex\n    }\n  }\n\n  each(callback: Callback<T, void>) {\n    const each: GetHexState<T> = (currentGrid) => {\n      const prevHexState = this._getPrevHexState(currentGrid)\n      for (const hex of prevHexState.hexes) {\n        callback(hex, currentGrid)\n      }\n      return prevHexState\n    }\n    return this._clone(each)\n  }\n\n  filter(predicate: Callback<T, boolean>) {\n    const filter: GetHexState<T> = (currentGrid) => {\n      const nextHexes: T[] = []\n      const prevHexState = this._getPrevHexState(currentGrid)\n      let cursor = prevHexState.cursor\n\n      for (const hex of prevHexState.hexes) {\n        if (predicate(hex, currentGrid)) {\n          cursor = hex\n          nextHexes.push(cursor)\n        }\n      }\n\n      return { hexes: nextHexes, cursor }\n    }\n\n    return this._clone(filter)\n  }\n\n  takeWhile(predicate: Callback<T, boolean>) {\n    const takeWhile: GetHexState<T> = (currentGrid) => {\n      const nextHexes: T[] = []\n      const prevHexState = this._getPrevHexState(currentGrid)\n      let cursor = prevHexState.cursor\n\n      for (const hex of prevHexState.hexes) {\n        if (!predicate(hex, currentGrid)) {\n          return { hexes: nextHexes, cursor }\n        }\n        cursor = hex\n        nextHexes.push(cursor)\n      }\n\n      return { hexes: nextHexes, cursor }\n    }\n\n    return this._clone(takeWhile)\n  }\n\n  traverse(traversers: Traverser<T>[] | Traverser<T>) {\n    const traverse: GetHexState<T> = (currentGrid) => {\n      const nextHexes: T[] = []\n      let cursor = this._getPrevHexState(currentGrid).cursor ?? this.getHex()\n\n      for (const nextCursor of flatTraverse(traversers)(cursor, this.getHex)) {\n        cursor = nextCursor\n        nextHexes.push(cursor)\n      }\n\n      return { hexes: nextHexes, cursor }\n    }\n\n    return this._clone(traverse)\n  }\n\n  run(callback?: Callback<T, void>) {\n    for (const hex of this._getPrevHexState(this).hexes) {\n      callback && callback(hex, this)\n    }\n    return this\n  }\n\n  private _clone(getHexState: GetHexState<T>) {\n    const newGrid = new Grid(this.hexPrototype, this.store)\n    newGrid._getPrevHexState = getHexState\n    return newGrid\n  }\n}\n\ninterface GetHexState<T extends Hex> {\n  (grid: Grid<T>): HexState<T>\n}\n\ninterface HexState<T extends Hex> {\n  hexes: T[]\n  cursor: T | null\n}\n","import { Hex, HexCoordinates } from '../../hex'\nimport { Traverser } from '../types'\n\nexport const at = <T extends Hex>(coordinates: HexCoordinates): Traverser<T> => (_, getHex) => [getHex(coordinates)]\n\nexport const start = at\n","import { Hex } from '../../hex'\nimport { flatTraverse } from '../functions'\nimport { Traverser } from '../types'\n\n/**\n * For each hex from `source` traverses over hex coordinates from `traverser`\n * @param source    Each hex in the source is passed one-by-one as a cursor to the traverser\n * @param branch Receives each hex coordinates from source as the start cursor\n */\nexport const branch = <T extends Hex>(\n  source: Traverser<T> | Traverser<T>[],\n  branch: Traverser<T> | Traverser<T>[],\n): Traverser<T> => (cursor, getHex) => {\n  const flatBranch = flatTraverse(branch)\n  const result: T[] = []\n  let _cursor = cursor\n\n  for (const sourceCursor of flatTraverse(source)(_cursor, getHex)) {\n    _cursor = sourceCursor\n    result.push(_cursor)\n    for (const branchCursor of flatBranch(_cursor, getHex)) {\n      result.push(branchCursor)\n    }\n  }\n\n  return result\n}\n","import { CompassDirection } from '../../compass'\nimport { Hex } from '../../hex'\nimport { neighborOf } from '../functions'\nimport { Traverser } from '../types'\n\nexport const move = <T extends Hex>(direction: CompassDirection, times = 1): Traverser<T> => {\n  return (cursor, getHex) => {\n    const result: T[] = []\n    let _cursor = cursor\n\n    for (let i = 1; i <= times; i++) {\n      _cursor = getHex(neighborOf(_cursor, direction))\n      result.push(_cursor)\n    }\n\n    return result\n  }\n}\n","import { Compass, CompassDirection } from '../../compass'\nimport { Hex, HexCoordinates, hexToOffset, OffsetCoordinates } from '../../hex'\nimport { isOffset } from '../../utils'\nimport { Traverser } from '../types'\nimport { at } from './at'\nimport { branch } from './branch'\nimport { move } from './move'\n\n// todo: add in docs: only 90° corners for cardinal directions\n// todo: when passed opposing corners: maybe add option to determine if row or col is traversed first\nexport function rectangle<T extends Hex>(options: RectangleOptions): Traverser<T>\nexport function rectangle<T extends Hex>(cornerA: HexCoordinates, cornerB: HexCoordinates): Traverser<T>\nexport function rectangle<T extends Hex>(\n  optionsOrCornerA: RectangleOptions | HexCoordinates,\n  cornerB?: HexCoordinates,\n): Traverser<T> {\n  return (cursor, getHex) => {\n    const { width, height, start = { q: 0, r: 0 }, direction = CompassDirection.E } = cornerB\n      ? optionsFromOpposingCorners(optionsOrCornerA as HexCoordinates, cornerB, cursor.isPointy, cursor.offset)\n      : (optionsOrCornerA as RectangleOptions)\n\n    return branch<T>([at(start), move(Compass.rotate(direction, 2), height - 1)], move(direction, width - 1))(\n      cursor,\n      getHex,\n    )\n  }\n}\n\nexport interface RectangleOptions {\n  width: number\n  height: number\n  start?: HexCoordinates\n  direction?: CompassDirection\n}\n\nfunction optionsFromOpposingCorners(\n  cornerA: HexCoordinates,\n  cornerB: HexCoordinates,\n  isPointy: boolean,\n  offset: number,\n): RectangleOptions {\n  const { col: cornerACol, row: cornerARow } = assertOffsetCoordinates(cornerA, isPointy, offset)\n  const { col: cornerBCol, row: cornerBRow } = assertOffsetCoordinates(cornerB, isPointy, offset)\n  const smallestCol = cornerACol < cornerBCol ? 'A' : 'B'\n  const smallestRow = cornerARow < cornerBRow ? 'A' : 'B'\n  const smallestColRow = (smallestCol + smallestRow) as keyof typeof RULES_FOR_SMALLEST_COL_ROW\n  const { swapWidthHeight, direction } = RULES_FOR_SMALLEST_COL_ROW[smallestColRow]\n  const width = Math.abs(cornerACol - cornerBCol) + 1\n  const height = Math.abs(cornerARow - cornerBRow) + 1\n\n  return {\n    width: swapWidthHeight ? height : width,\n    height: swapWidthHeight ? width : height,\n    start: cornerA,\n    direction,\n  }\n}\n\nfunction assertOffsetCoordinates(cornerA: HexCoordinates, isPointy: boolean, offset: number): OffsetCoordinates {\n  return isOffset(cornerA) ? cornerA : hexToOffset({ q: cornerA.q, r: cornerA.r, isPointy, offset })\n}\n\nconst RULES_FOR_SMALLEST_COL_ROW = {\n  AA: {\n    swapWidthHeight: false,\n    direction: CompassDirection.E,\n  },\n  AB: {\n    swapWidthHeight: true,\n    direction: CompassDirection.N,\n  },\n  BA: {\n    swapWidthHeight: true,\n    direction: CompassDirection.S,\n  },\n  BB: {\n    swapWidthHeight: false,\n    direction: CompassDirection.W,\n  },\n}\n\n/**\n * This is the \"old way\" of creating rectangles. It's less performant (up until ~40x slower with 200x200 rectangles), but it's able to create\n * actual rectangles (with 90° corners) for the ordinal directions. But because I assume people mostly need rectangles in the cardinal directions,\n * I've decided to drop \"true ordinal rectangle\" support for now.\n */\n\n// export const RECTANGLE_DIRECTIONS_POINTY = [\n//   null, // ambiguous\n//   ['q', 's', 'r'], // NE\n//   ['q', 'r', 's'], // E\n//   ['r', 'q', 's'], // SE\n//   null, // ambiguous\n//   ['r', 's', 'q'], // SW\n//   ['s', 'r', 'q'], // W\n//   ['s', 'q', 'r'], // NW\n// ] as [keyof CubeCoordinates, keyof CubeCoordinates, keyof CubeCoordinates][]\n\n// export const RECTANGLE_DIRECTIONS_FLAT = [\n//   ['s', 'q', 'r'], // N\n//   ['q', 's', 'r'], // NE\n//   null,\n//   ['q', 'r', 's'], // SE\n//   ['r', 'q', 's'], // S\n//   ['r', 's', 'q'], // SW\n//   null,\n//   ['s', 'r', 'q'], // NW\n// ] as [keyof CubeCoordinates, keyof CubeCoordinates, keyof CubeCoordinates][]\n\n// export const rectangle = <T extends Hex>(\n//   hexPrototype: T,\n//   {\n//     width,\n//     height,\n//     start = { q: 0, r: 0 },\n//     direction = hexPrototype.isPointy ? CompassDirection.E : CompassDirection.SE,\n//   }: RectangleOptions,\n// ) => {\n//   const result: T[] = []\n//   const _start: CubeCoordinates = { q: start.q, r: start.r, s: -start.q - start.r }\n//   const [firstCoordinate, secondCoordinate, thirdCoordinate] = (hexPrototype.isPointy\n//     ? RECTANGLE_DIRECTIONS_POINTY\n//     : RECTANGLE_DIRECTIONS_FLAT)[direction]\n//   const [firstStop, secondStop] = hexPrototype.isPointy ? [width, height] : [height, width]\n\n//   for (let second = 0; second < secondStop; second++) {\n//     // for (let second = 0; second > -secondStop; second--) {\n//     const secondOffset = offsetFromZero(hexPrototype.offset, second)\n\n//     for (let first = -secondOffset; first < firstStop - secondOffset; first++) {\n//       const nextCoordinates = {\n//         [firstCoordinate]: first + _start[firstCoordinate],\n//         [secondCoordinate]: second + _start[secondCoordinate],\n//         [thirdCoordinate]: -first - second + _start[thirdCoordinate],\n//       } as unknown\n//       result.push(createHex<T>(hexPrototype, nextCoordinates as CubeCoordinates))\n//     }\n//   }\n\n//   return result\n// }\n","export * from './at'\nexport * from './branch'\nexport * from './move'\nexport * from './rectangle'\n","export * from './functions'\nexport * from './grid'\nexport * from './traversers'\nexport * from './types'\n","// todo: export everything explicitly to create a public api\nexport * from './compass'\nexport * from './grid'\nexport * from './hex'\n","import { HexWithTerrain, renderAll } from './render'\nimport { TILES } from './tiles'\nimport { createHexPrototype, Grid, Hex, rectangle } from '../src'\n\ninterface CustomHex extends Hex {\n  terrain: string\n}\n\nconst hexPrototype = createHexPrototype<CustomHex>({\n  dimensions: { width: 60, height: 51.96 },\n  orientation: 'FLAT',\n  origin: 'topLeft',\n})\n\nconst grid = new Grid(hexPrototype, rectangle({ width: 12, height: 9 }))\n// .traverse([at({ q: 0, r: 0 }), move(Compass.SE), move(Compass.NE)])\n// .filter(inStore)\n// .each(render)\n// .run()\n// console.log(grid.store)\n\nconst tilesToArray = (tilesOrder: string[]) => {\n  const tilesIndex: number[] = []\n\n  const tiles: string[][] = []\n  tilesOrder.forEach((tile) => {\n    const tileIndex = Number(tile[0]) - 1 // convert to zero-based index\n    tilesIndex.push(tileIndex)\n\n    const isFlipped = !!tile[1]\n    tiles.push(isFlipped ? [...TILES[tileIndex]].reverse() : TILES[tileIndex])\n  })\n\n  const result = []\n\n  for (let pair = 0; pair < 3; pair++) {\n    for (let j = 0; j < 3; j++) {\n      for (let coordinate = 0; coordinate < 6; coordinate++) {\n        const leftTiles = tiles[tilesIndex[pair * 2]]\n        result.push(leftTiles[j * 6 + coordinate])\n      }\n      for (let coordinate = 0; coordinate < 6; coordinate++) {\n        const rightTiles = tiles[tilesIndex[pair * 2 + 1]]\n        result.push(rightTiles[j * 6 + coordinate])\n      }\n    }\n  }\n\n  return result\n}\n\nconst renderTiles = (tilesOrder: string[]) => {\n  const hexagonsOrdered: HexWithTerrain[] = []\n  const tilesInArray = tilesToArray(tilesOrder)\n\n  // grid.each(render)\n  let index = 0\n  grid\n    .each((hex, grid) => {\n      hex.terrain = tilesInArray[index]\n      hexagonsOrdered.push(hex)\n      // grid.store.set(`${hex.q},${hex.r}`, hex)\n      // console.log('tilesInArray[' + index + ']:', tilesInArray[index])\n      index++\n      // render(hex)\n    })\n    .run()\n  renderAll(hexagonsOrdered)\n}\n\nconst gatherAndRender = () => {\n  const values: string[] = []\n  Array.prototype.forEach.call(document.querySelectorAll('.js-tilesPosition'), (el, i) =>\n    values.push(el.value || i + 1),\n  )\n  document.querySelectorAll('.js-tilesPositionCheckbox').forEach((el, i) => {\n    const element = el as HTMLInputElement\n    values[i] += element.checked ? 'r' : ''\n  })\n  renderTiles(values)\n}\n\ndocument.querySelectorAll('.js-tilesPosition').forEach((el) => el.addEventListener('input', gatherAndRender))\n\ndocument.querySelectorAll('.js-tilesPositionCheckbox').forEach((el) => {\n  el.addEventListener('change', gatherAndRender)\n})\n\ngatherAndRender()\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}